{
    "swagger": "2.0",
    "info": {
        "title": "Tendermint RPC",
        "version": "1.0",
        "description": "Tendermint supports the following RPC protocols:\n\n* URI over HTTP\n* JSONRPC over HTTP\n* JSONRPC over websockets\n\n## Configuration\n\nRPC can be configured by tuning parameters under `[rpc]` table in the\n`$TMHOME/config/config.toml` file or by using the `--rpc.X` command-line\nflags.\n\nDefault rpc listen address is `tcp://0.0.0.0:26657`.\nTo set another address, set the `laddr` config parameter to desired value.\nCORS (Cross-Origin Resource Sharing) can be enabled by setting\n`cors_allowed_origins`, `cors_allowed_methods`, `cors_allowed_headers`\nconfig parameters.\n\n## Arguments\n\nArguments which expect strings or byte arrays may be passed as quoted\nstrings, like `\"abc\"` or as `0x`-prefixed strings, like `0x616263`.\n\n## URI/HTTP\n\nA REST like interface.\n\n    curl localhost:26657/block?height=5\n\n## JSONRPC/HTTP\n\nJSONRPC requests can be POST'd to the root RPC endpoint via HTTP.\n\n    curl --header \"Content-Type: application/json\" --request POST --data '{\"method\": \"block\", \"params\": [\"5\"], \"id\": 1}' localhost:26657\n\n## JSONRPC/websockets\n\nJSONRPC requests can be also made via websocket.\nThe websocket endpoint is at `/websocket`, e.g. `localhost:26657/websocket`.\nAsynchronous RPC functions like event `subscribe` and `unsubscribe` are\nonly available via websockets.\n\nExample using https://github.com/hashrocket/ws:\n\n    ws ws://localhost:26657/websocket\n    > { \"jsonrpc\": \"2.0\", \"method\": \"subscribe\", \"params\": [\"tm.event='NewBlock'\"], \"id\": 1 }\n"
    },
    "host": "keplr-gateway.scrtlabs.com",
    "basePath": "/rpc",
    "schemes": [
        "http",
        "https"
    ],
    "securityDefinitions": {
        "apiKeyHeader": {
            "type": "apiKey",
            "name": "Ocp-Apim-Subscription-Key",
            "in": "header"
        },
        "apiKeyQuery": {
            "type": "apiKey",
            "name": "subscription-key",
            "in": "query"
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ],
    "paths": {
        "/broadcast_tx_sync": {
            "get": {
                "description": "If you want to be sure that the transaction is included in a block, you can\nsubscribe for the result using JSONRPC via a websocket. See\nhttps://docs.tendermint.com/master/app-dev/subscribing-to-events-via-websocket.html\nIf you haven't received anything after a couple of blocks, resend it. If the\nsame happens again, send it to some other node. A few reasons why it could\nhappen:\n\n1. malicious node can drop or pretend it had committed your tx\n2. malicious proposer (not necessary the one you're communicating with) can\ndrop transactions, which might become valid in the future\n(https://github.com/tendermint/tendermint/issues/3322)\n\n\nPlease refer to\nhttps://docs.tendermint.com/master/tendermint-core/using-tendermint.html#formatting\nfor formatting/encoding rules.\n",
                "operationId": "broadcast_tx_sync",
                "summary": "Returns with the response from CheckTx. Does not wait for DeliverTx result.",
                "tags": [
                    "Tx"
                ],
                "parameters": [
                    {
                        "name": "tx",
                        "in": "query",
                        "description": "The transaction",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Empty",
                        "schema": {
                            "$ref": "#/definitions/BroadcastTxResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "code": "0",
                                    "data": "",
                                    "log": "",
                                    "codespace": "ibc",
                                    "hash": "0D33F2F03A5234F38706E43004489E061AC40A2E"
                                },
                                "error": ""
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/broadcast_tx_async": {
            "get": {
                "description": "If you want to be sure that the transaction is included in a block, you can\nsubscribe for the result using JSONRPC via a websocket. See\nhttps://docs.tendermint.com/master/app-dev/subscribing-to-events-via-websocket.html\nIf you haven't received anything after a couple of blocks, resend it. If the\nsame happens again, send it to some other node. A few reasons why it could\nhappen:\n\n1. malicious node can drop or pretend it had committed your tx\n2. malicious proposer (not necessary the one you're communicating with) can\ndrop transactions, which might become valid in the future\n(https://github.com/tendermint/tendermint/issues/3322)\n3. node can be offline\n\nPlease refer to\nhttps://docs.tendermint.com/master/tendermint-core/using-tendermint.html#formatting\nfor formatting/encoding rules.\n",
                "operationId": "broadcast_tx_async",
                "summary": "Returns right away, with no response. Does not wait for CheckTx nor DeliverTx results.",
                "tags": [
                    "Tx"
                ],
                "parameters": [
                    {
                        "name": "tx",
                        "in": "query",
                        "description": "The transaction",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "empty answer",
                        "schema": {
                            "$ref": "#/definitions/BroadcastTxResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "code": "0",
                                    "data": "",
                                    "log": "",
                                    "codespace": "ibc",
                                    "hash": "0D33F2F03A5234F38706E43004489E061AC40A2E"
                                },
                                "error": ""
                            }
                        }
                    },
                    "500": {
                        "description": "empty error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/broadcast_tx_commit": {
            "get": {
                "description": "IMPORTANT: use only for testing and development. In production, use\nBroadcastTxSync or BroadcastTxAsync. You can subscribe for the transaction\nresult using JSONRPC via a websocket. See\nhttps://docs.tendermint.com/master/app-dev/subscribing-to-events-via-websocket.html\n\nCONTRACT: only returns error if mempool.CheckTx() errs or if we timeout\nwaiting for tx to commit.\n\nIf CheckTx or DeliverTx fail, no error will be returned, but the returned result\nwill contain a non-OK ABCI code.\n\nPlease refer to\nhttps://docs.tendermint.com/master/tendermint-core/using-tendermint.html#formatting\nfor formatting/encoding rules.\n",
                "operationId": "broadcast_tx_commit",
                "summary": "Returns with the responses from CheckTx and DeliverTx.",
                "tags": [
                    "Tx"
                ],
                "parameters": [
                    {
                        "name": "tx",
                        "in": "query",
                        "description": "The transaction",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "empty answer",
                        "schema": {
                            "$ref": "#/definitions/BroadcastTxCommitResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "",
                                "result": {
                                    "height": "26682",
                                    "hash": "75CA0F856A4DA078FC4911580360E70CEFB2EBEE",
                                    "deliver_tx": {
                                        "log": "",
                                        "data": "",
                                        "code": "0"
                                    },
                                    "check_tx": {
                                        "log": "",
                                        "data": "",
                                        "code": "0"
                                    }
                                },
                                "id": 0,
                                "jsonrpc": "2.0"
                            }
                        }
                    },
                    "500": {
                        "description": "empty error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/check_tx": {
            "get": {
                "description": "The transaction won't be added to the mempool.\n\nPlease refer to\nhttps://docs.tendermint.com/master/tendermint-core/using-tendermint.html#formatting\nfor formatting/encoding rules.\n",
                "operationId": "check_tx",
                "summary": "Checks the transaction without executing it.",
                "tags": [
                    "Tx"
                ],
                "parameters": [
                    {
                        "name": "tx",
                        "in": "query",
                        "description": "The transaction",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ABCI application's CheckTx response",
                        "schema": {
                            "$ref": "#/definitions/CheckTxResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "",
                                "result": {
                                    "code": "0",
                                    "data": "",
                                    "log": "",
                                    "info": "",
                                    "gas_wanted": "1",
                                    "gas_used": "0",
                                    "events": [
                                        {
                                            "type": "app",
                                            "attributes": [
                                                {
                                                    "key": "YWN0aW9u",
                                                    "value": "c2VuZA==",
                                                    "index": false
                                                }
                                            ]
                                        }
                                    ],
                                    "codespace": "bank"
                                },
                                "id": 0,
                                "jsonrpc": "2.0"
                            }
                        }
                    },
                    "500": {
                        "description": "empty error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/remove_tx": {
            "get": {
                "description": "Removes a transaction from the mempool.",
                "operationId": "remove_tx",
                "summary": "Removes a transaction from the mempool.",
                "tags": [
                    "TxKey"
                ],
                "parameters": [
                    {
                        "name": "txKey",
                        "in": "query",
                        "description": "The transaction key",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "empty response."
                    },
                    "500": {
                        "description": "empty error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/subscribe": {
            "get": {
                "description": "To tell which events you want, you need to provide a query. query is a\nstring, which has a form: \"condition AND condition ...\" (no OR at the\nmoment). condition has a form: \"key operation operand\". key is a string with\na restricted set of possible symbols ( \\t\\n\\r\\\\()\"'=>< are not allowed).\noperation can be \"=\", \"<\", \"<=\", \">\", \">=\", \"CONTAINS\" AND \"EXISTS\". operand\ncan be a string (escaped with single quotes), number, date or time.\n\nExamples:\n      tm.event = 'NewBlock'               # new blocks\n      tm.event = 'CompleteProposal'       # node got a complete proposal\n      tm.event = 'Tx' AND tx.hash = 'XYZ' # single transaction\n      tm.event = 'Tx' AND tx.height = 5   # all txs of the fifth block\n      tx.height = 5                       # all txs of the fifth block\n\nTendermint provides a few predefined keys: tm.event, tx.hash and tx.height.\nNote for transactions, you can define additional keys by providing events with\nDeliverTx response.\n\nimport (\n    abci \"github.com/tendermint/tendermint/abci/types\"\n    \"github.com/tendermint/tendermint/libs/pubsub/query\"\n)\n\nabci.ResponseDeliverTx{\n  Events: []abci.Event{\n      {\n          Type: \"rewards.withdraw\",\n          Attributes: []abci.EventAttribute{\n              {Key: \"address\", Value: \"AddrA\", Index: true},\n              {Key: \"source\", Value: \"SrcX\", Index: true},\n              {Key: \"amount\", Value: \"...\", Index: true},\n              {Key: \"balance\", Value: \"...\", Index: true},\n          },\n      },\n      {\n          Type: \"rewards.withdraw\",\n          Attributes: []abci.EventAttribute{\n              {Key: \"address\", Value: \"AddrB\", Index: true},\n              {Key: \"source\", Value: \"SrcY\", Index: true},\n              {Key: \"amount\", Value: \"...\", Index: true},\n              {Key: \"balance\", Value: \"...\", Index: true},\n          },\n      },\n      {\n          Type: \"transfer\",\n          Attributes: []abci.EventAttribute{\n              {Key: \"sender\", Value: \"AddrC\", Index: true},\n              {Key: \"recipient\", Value: \"AddrD\", Index: true},\n              {Key: \"amount\", Value: \"...\", Index: true},\n          },\n      },\n  },\n}\n\nAll events are indexed by a composite key of the form {eventType}.{evenAttrKey}.\nIn the above examples, the following keys would be indexed:\n   - rewards.withdraw.address\n   - rewards.withdraw.source\n   - rewards.withdraw.amount\n   - rewards.withdraw.balance\n   - transfer.sender\n   - transfer.recipient\n   - transfer.amount\n\nMultiple event types with duplicate keys are allowed and are meant to\ncategorize unique and distinct events. In the above example, all events\nindexed under the key `rewards.withdraw.address` will have the following\nvalues stored and queryable:\n\n   - AddrA\n   - AddrB\n\nTo create a query for txs where address AddrA withdrew rewards:\nquery.MustParse(\"tm.event = 'Tx' AND rewards.withdraw.address = 'AddrA'\")\n\nTo create a query for txs where address AddrA withdrew rewards from source Y:\nquery.MustParse(\"tm.event = 'Tx' AND rewards.withdraw.address = 'AddrA' AND rewards.withdraw.source = 'Y'\")\n\nTo create a query for txs where AddrA transferred funds:\nquery.MustParse(\"tm.event = 'Tx' AND transfer.sender = 'AddrA'\")\n\nThe following queries would return no results:\nquery.MustParse(\"tm.event = 'Tx' AND transfer.sender = 'AddrZ'\")\nquery.MustParse(\"tm.event = 'Tx' AND rewards.withdraw.address = 'AddrZ'\")\nquery.MustParse(\"tm.event = 'Tx' AND rewards.withdraw.source = 'W'\")\n\nSee list of all possible events here\nhttps://godoc.org/github.com/tendermint/tendermint/types#pkg-constants\n\nFor complete query syntax, check out\nhttps://godoc.org/github.com/tendermint/tendermint/libs/pubsub/query.\n\n```go\nimport rpchttp \"github.com/tendermint/rpc/client/http\"\nimport \"github.com/tendermint/tendermint/types\"\n\nclient, err := rpchttp.New(\"tcp://0.0.0.0:26657\", \"/websocket\")\nif err != nil {\n  // handle error\n}\n\nerr = client.Start()\nif err != nil {\n  // handle error\n}\ndefer client.Stop()\nctx, cancel := context.WithTimeout(context.Background(), 1 * time.Second)\ndefer cancel()\nquery := \"tm.event = 'Tx' AND tx.height = 3\"\ntxs, err := client.Subscribe(ctx, \"test-client\", query)\nif err != nil {\n  // handle error\n}\n\ngo func() {\n for e := range txs {\n   fmt.Println(\"got \", e.Data.(types.EventDataTx))\n   }\n}()\n```\n\nNOTE: if you're not reading events fast enough, Tendermint might\nterminate the subscription.\n",
                "operationId": "subscribe",
                "summary": "Subscribe for events via WebSocket.",
                "tags": [
                    "Websocket"
                ],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "query is a string, which has a form: \"condition AND condition ...\" (no OR at the\nmoment). condition has a form: \"key operation operand\". key is a string with\na restricted set of possible symbols ( \\t\\n\\r\\\\()\"'=>< are not allowed).\noperation can be \"=\", \"<\", \"<=\", \">\", \">=\", \"CONTAINS\". operand can be a\nstring (escaped with single quotes), number, date or time.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "empty answer",
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "result": {}
                            }
                        }
                    },
                    "500": {
                        "description": "empty error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/unsubscribe": {
            "get": {
                "description": "```go\nclient, err := rpchttp.New(\"tcp://0.0.0.0:26657\", \"/websocket\")\nif err != nil {\n  // handle error\n}\n\nerr := client.Start()\nif err != nil {\n  // handle error\n}\ndefer client.Stop()\nquery := \"tm.event = 'Tx' AND tx.height = 3\"\nerr = client.Unsubscribe(context.Background(), \"test-client\", query)\nif err != nil {\n  // handle error\n}\n```\n",
                "operationId": "unsubscribe",
                "summary": "Unsubscribe from event on Websocket",
                "tags": [
                    "Websocket"
                ],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "query is a string, which has a form: \"condition AND condition ...\" (no OR at the\nmoment). condition has a form: \"key operation operand\". key is a string with\na restricted set of possible symbols ( \\t\\n\\r\\\\()\"'=>< are not allowed).\noperation can be \"=\", \"<\", \"<=\", \">\", \">=\", \"CONTAINS\". operand can be a\nstring (escaped with single quotes), number, date or time.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Answer",
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "result": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/unsubscribe_all": {
            "get": {
                "description": "Unsubscribe from all events via WebSocket\n",
                "operationId": "unsubscribe_all",
                "summary": "Unsubscribe from all events via WebSocket",
                "tags": [
                    "Websocket"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "empty answer",
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "result": {}
                            }
                        }
                    },
                    "500": {
                        "description": "empty error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get node health. Returns empty result (200 OK) on success, no response - in case of an error.\n",
                "operationId": "health",
                "summary": "Node heartbeat",
                "tags": [
                    "Info"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Gets Node Health",
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "result": {}
                            }
                        }
                    },
                    "500": {
                        "description": "empty error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "Get Tendermint status including node info, pubkey, latest block hash, app hash, block height, current max peer height, and time.\n",
                "operationId": "status",
                "summary": "Node Status",
                "tags": [
                    "Info"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Status of the node",
                        "schema": {
                            "$ref": "#/definitions/StatusResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "result": {
                                    "node_info": {
                                        "protocol_version": {
                                            "p2p": "7",
                                            "block": "10",
                                            "app": "0"
                                        },
                                        "id": "5576458aef205977e18fd50b274e9b5d9014525a",
                                        "listen_addr": "tcp://0.0.0.0:26656",
                                        "network": "cosmoshub-2",
                                        "version": "0.32.1",
                                        "channels": "4020212223303800",
                                        "moniker": "moniker-node",
                                        "other": {
                                            "tx_index": "on",
                                            "rpc_address": "tcp://0.0.0.0:26657"
                                        }
                                    },
                                    "sync_info": {
                                        "latest_block_hash": "790BA84C3545FCCC49A5C629CEE6EA58A6E875C3862175BDC11EE7AF54703501",
                                        "latest_app_hash": "C9AEBB441B787D9F1D846DE51F3826F4FD386108B59B08239653ABF59455C3F8",
                                        "latest_block_height": "1262196",
                                        "latest_block_time": "2019-08-01T11:52:22.8187622+00:00",
                                        "earliest_block_hash": "790BA84C3545FCCC49A5C629CEE6EA58A6E875C3862175BDC11EE7AF54703501",
                                        "earliest_app_hash": "C9AEBB441B787D9F1D846DE51F3826F4FD386108B59B08239653ABF59455C3F8",
                                        "earliest_block_height": "1262196",
                                        "earliest_block_time": "2019-08-01T11:52:22.8187622+00:00",
                                        "max_peer_block_height": "1262196",
                                        "catching_up": false,
                                        "total_synced_time": "1000000000",
                                        "remaining_time": "0",
                                        "total_snapshots": "10",
                                        "chunk_process_avg_time": "1000000000",
                                        "snapshot_height": "1262196",
                                        "snapshot_chunks_count": "10",
                                        "snapshot_chunks_total": "100",
                                        "backfilled_blocks": "10",
                                        "backfill_blocks_total": "100"
                                    },
                                    "validator_info": {
                                        "address": "5D6A51A8E9899C44079C6AF90618BA0369070E6E",
                                        "pub_key": {
                                            "type": "tendermint/PubKeyEd25519",
                                            "value": "A6DoBUypNtUAyEHWtQ9bFjfNg8Bo9CrnkUGl6k6OHN4="
                                        },
                                        "voting_power": "0"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "empty error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/net_info": {
            "get": {
                "description": "Get network info.\n",
                "operationId": "net_info",
                "summary": "Network information",
                "tags": [
                    "Info"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "empty answer",
                        "schema": {
                            "$ref": "#/definitions/NetInfoResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "result": {
                                    "listening": true,
                                    "listeners": [
                                        "Listener(@)"
                                    ],
                                    "n_peers": "1",
                                    "peers": [
                                        {
                                            "node_id": "",
                                            "url": "<id>@95.179.155.35:2385>"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "empty error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/dial_seeds": {
            "get": {
                "description": "Dial a peer, this route in under unsafe, and has to manually enabled to use\n\n  **Example:** curl 'localhost:26657/dial_seeds?seeds=\\[\"f9baeaa15fedf5e1ef7448dd60f46c01f1a9e9c4@1.2.3.4:26656\",\"0491d373a8e0fcf1023aaf18c51d6a1d0d4f31bd@5.6.7.8:26656\"\\]'\n",
                "operationId": "dial_seeds",
                "summary": "Dial Seeds (Unsafe)",
                "tags": [
                    "Unsafe"
                ],
                "parameters": [
                    {
                        "name": "peers",
                        "in": "query",
                        "description": "list of seed nodes to dial",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Dialing seeds in progress. See /net_info for details",
                        "schema": {
                            "$ref": "#/definitions/dialResp"
                        },
                        "examples": {
                            "application/json": {
                                "Log": "Dialing seeds in progress. See /net_info for details"
                            }
                        }
                    },
                    "500": {
                        "description": "empty error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/dial_peers": {
            "get": {
                "description": "Set a persistent peer, this route in under unsafe, and has to manually enabled to use.\n\n**Example:** curl 'localhost:26657/dial_peers?peers=\\[\"f9baeaa15fedf5e1ef7448dd60f46c01f1a9e9c4@1.2.3.4:26656\",\"0491d373a8e0fcf1023aaf18c51d6a1d0d4f31bd@5.6.7.8:26656\"\\]&persistent=false'\n",
                "operationId": "dial_peers",
                "summary": "Add Peers/Persistent Peers (unsafe)",
                "tags": [
                    "Unsafe"
                ],
                "parameters": [
                    {
                        "name": "persistent",
                        "in": "query",
                        "description": "Have the peers you are dialing be persistent",
                        "type": "boolean"
                    },
                    {
                        "name": "unconditional",
                        "in": "query",
                        "description": "Have the peers you are dialing be unconditional",
                        "type": "boolean"
                    },
                    {
                        "name": "private",
                        "in": "query",
                        "description": "Have the peers you are dialing be private",
                        "type": "boolean"
                    },
                    {
                        "name": "peers",
                        "in": "query",
                        "description": "array of peers to dial",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Dialing seeds in progress. See /net_info for details",
                        "schema": {
                            "$ref": "#/definitions/dialResp"
                        },
                        "examples": {
                            "application/json": {
                                "Log": "Dialing seeds in progress. See /net_info for details"
                            }
                        }
                    },
                    "500": {
                        "description": "empty error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/unsafe_flush_mempool": {
            "get": {
                "description": "Flush flushes out the mempool. It acquires a read-lock, fetches all the\ntransactions currently in the transaction store and removes each transaction\nfrom the store and all indexes and finally resets the cache.\n\nNote, flushing the mempool may leave the mempool in an inconsistent state.\n",
                "operationId": "unsafe_flush_mempool",
                "summary": "Flush mempool of all unconfirmed transactions",
                "tags": [
                    "Unsafe"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "empty answer",
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "result": {}
                            }
                        }
                    },
                    "500": {
                        "description": "empty error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/blockchain": {
            "get": {
                "description": "Get block headers for minHeight <= height maxHeight.\n\nIf maxHeight does not yet exist, blocks up to the current height will\nbe returned. If minHeight does not exist (due to pruning), earliest\nexisting height will be used.\n\nAt most 20 items will be returned. Block headers are returned in\ndescending order (highest first).\n",
                "operationId": "blockchain",
                "summary": "Get block headers (max: 20) for minHeight <= height <= maxHeight.",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "minHeight",
                        "in": "query",
                        "description": "Minimum block height to return",
                        "type": "integer"
                    },
                    {
                        "name": "maxHeight",
                        "in": "query",
                        "description": "Maximum block height to return",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Block headers, returned in descending order (highest first).",
                        "schema": {
                            "$ref": "#/definitions/BlockchainResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "result": {
                                    "last_height": "1276718",
                                    "block_metas": [
                                        {
                                            "block_id": {
                                                "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                "parts": {
                                                    "total": 1,
                                                    "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                }
                                            },
                                            "block_size": 1000000,
                                            "header": {
                                                "version": {
                                                    "block": "10",
                                                    "app": "0"
                                                },
                                                "chain_id": "cosmoshub-2",
                                                "height": "12",
                                                "time": "2019-04-22T17:01:51.7013562+00:00",
                                                "last_block_id": {
                                                    "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                    "parts": {
                                                        "total": 1,
                                                        "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                    }
                                                },
                                                "last_commit_hash": "21B9BC845AD2CB2C4193CDD17BFC506F1EBE5A7402E84AD96E64171287A34812",
                                                "data_hash": "970886F99E77ED0D60DA8FCE0447C2676E59F2F77302B0C4AA10E1D02F18EF73",
                                                "validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                                "next_validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                                "consensus_hash": "0F2908883A105C793B74495EB7D6DF2EEA479ED7FC9349206A65CB0F9987A0B8",
                                                "app_hash": "223BF64D4A01074DC523A80E76B9BBC786C791FB0A1893AC5B14866356FCFD6C",
                                                "last_results_hash": "",
                                                "evidence_hash": "",
                                                "proposer_address": "D540AB022088612AC74B287D076DBFBC4A377A2E"
                                            },
                                            "num_txs": "54"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/header": {
            "get": {
                "description": "Retrieve the block header corresponding to a specified height.\n",
                "operationId": "header",
                "summary": "Get the header at a specified height",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "height",
                        "in": "query",
                        "description": "height to return. If no height is provided, it will fetch the latest height.",
                        "type": "integer",
                        "default": 0
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Header information.",
                        "schema": {
                            "$ref": "#/definitions/HeaderResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "result": {
                                    "version": {
                                        "block": "10",
                                        "app": "0"
                                    },
                                    "chain_id": "cosmoshub-2",
                                    "height": "12",
                                    "time": "2019-04-22T17:01:51.7013562+00:00",
                                    "last_block_id": {
                                        "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                        "parts": {
                                            "total": 1,
                                            "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                        }
                                    },
                                    "last_commit_hash": "21B9BC845AD2CB2C4193CDD17BFC506F1EBE5A7402E84AD96E64171287A34812",
                                    "data_hash": "970886F99E77ED0D60DA8FCE0447C2676E59F2F77302B0C4AA10E1D02F18EF73",
                                    "validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                    "next_validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                    "consensus_hash": "0F2908883A105C793B74495EB7D6DF2EEA479ED7FC9349206A65CB0F9987A0B8",
                                    "app_hash": "223BF64D4A01074DC523A80E76B9BBC786C791FB0A1893AC5B14866356FCFD6C",
                                    "last_results_hash": "",
                                    "evidence_hash": "",
                                    "proposer_address": "D540AB022088612AC74B287D076DBFBC4A377A2E"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/header_by_hash": {
            "get": {
                "description": "Retrieve the block header corresponding to a block hash.\n",
                "operationId": "header_by_hash",
                "summary": "Get header by hash",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "hash",
                        "in": "query",
                        "description": "header hash",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Header information.",
                        "schema": {
                            "$ref": "#/definitions/HeaderResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "result": {
                                    "version": {
                                        "block": "10",
                                        "app": "0"
                                    },
                                    "chain_id": "cosmoshub-2",
                                    "height": "12",
                                    "time": "2019-04-22T17:01:51.7013562+00:00",
                                    "last_block_id": {
                                        "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                        "parts": {
                                            "total": 1,
                                            "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                        }
                                    },
                                    "last_commit_hash": "21B9BC845AD2CB2C4193CDD17BFC506F1EBE5A7402E84AD96E64171287A34812",
                                    "data_hash": "970886F99E77ED0D60DA8FCE0447C2676E59F2F77302B0C4AA10E1D02F18EF73",
                                    "validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                    "next_validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                    "consensus_hash": "0F2908883A105C793B74495EB7D6DF2EEA479ED7FC9349206A65CB0F9987A0B8",
                                    "app_hash": "223BF64D4A01074DC523A80E76B9BBC786C791FB0A1893AC5B14866356FCFD6C",
                                    "last_results_hash": "",
                                    "evidence_hash": "",
                                    "proposer_address": "D540AB022088612AC74B287D076DBFBC4A377A2E"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/block": {
            "get": {
                "description": "Get Block.\n",
                "operationId": "block",
                "summary": "Get block at a specified height",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "height",
                        "in": "query",
                        "description": "height to return. If no height is provided, it will fetch the latest block.",
                        "type": "integer",
                        "default": 0
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Block information.",
                        "schema": {
                            "$ref": "#/definitions/BlockResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "result": {
                                    "block_id": {
                                        "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                        "parts": {
                                            "total": 1,
                                            "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                        }
                                    },
                                    "block": {
                                        "header": {
                                            "version": {
                                                "block": "10",
                                                "app": "0"
                                            },
                                            "chain_id": "cosmoshub-2",
                                            "height": "12",
                                            "time": "2019-04-22T17:01:51.7013562+00:00",
                                            "last_block_id": {
                                                "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                "parts": {
                                                    "total": 1,
                                                    "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                }
                                            },
                                            "last_commit_hash": "21B9BC845AD2CB2C4193CDD17BFC506F1EBE5A7402E84AD96E64171287A34812",
                                            "data_hash": "970886F99E77ED0D60DA8FCE0447C2676E59F2F77302B0C4AA10E1D02F18EF73",
                                            "validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                            "next_validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                            "consensus_hash": "0F2908883A105C793B74495EB7D6DF2EEA479ED7FC9349206A65CB0F9987A0B8",
                                            "app_hash": "223BF64D4A01074DC523A80E76B9BBC786C791FB0A1893AC5B14866356FCFD6C",
                                            "last_results_hash": "",
                                            "evidence_hash": "",
                                            "proposer_address": "D540AB022088612AC74B287D076DBFBC4A377A2E"
                                        },
                                        "data": [
                                            "yQHwYl3uCkKoo2GaChRnd+THLQ2RM87nEZrE19910Z28ABIUWW/t8AtIMwcyU0sT32RcMDI9GF0aEAoFdWF0b20SBzEwMDAwMDASEwoNCgV1YXRvbRIEMzEwMRCd8gEaagom61rphyEDoJPxlcjRoNDtZ9xMdvs+lRzFaHe2dl2P5R2yVCWrsHISQKkqX5H1zXAIJuC57yw0Yb03Fwy75VRip0ZBtLiYsUqkOsPUoQZAhDNP+6LY+RUwz/nVzedkF0S29NZ32QXdGv0="
                                        ],
                                        "evidence": [
                                            {
                                                "type": "string",
                                                "height": 0,
                                                "time": 0,
                                                "total_voting_power": 0,
                                                "validator": {
                                                    "pub_key": {
                                                        "type": "tendermint/PubKeyEd25519",
                                                        "value": "A6DoBUypNtUAyEHWtQ9bFjfNg8Bo9CrnkUGl6k6OHN4="
                                                    },
                                                    "voting_power": 0,
                                                    "address": "string"
                                                }
                                            }
                                        ],
                                        "last_commit": {
                                            "height": 0,
                                            "round": 0,
                                            "block_id": {
                                                "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                "parts": {
                                                    "total": 1,
                                                    "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                }
                                            },
                                            "signatures": [
                                                {
                                                    "type": 2,
                                                    "height": "1262085",
                                                    "round": 0,
                                                    "block_id": {
                                                        "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                        "parts": {
                                                            "total": 1,
                                                            "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                        }
                                                    },
                                                    "timestamp": "2019-08-01T11:39:38.8672698+00:00",
                                                    "validator_address": "000001E443FD237E4B616E2FA69DF4EE3D49A94F",
                                                    "validator_index": 0,
                                                    "signature": "DBchvucTzAUEJnGYpNvMdqLhBAHG4Px8BsOBB3J3mAFCLGeuG7uJqy+nVngKzZdPhPi8RhmE/xcw/M9DOJjEDg=="
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/block_by_hash": {
            "get": {
                "description": "Get Block By Hash.\n",
                "operationId": "block_by_hash",
                "summary": "Get block by hash",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "hash",
                        "in": "query",
                        "description": "block hash",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Block information.",
                        "schema": {
                            "$ref": "#/definitions/BlockResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "result": {
                                    "block_id": {
                                        "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                        "parts": {
                                            "total": 1,
                                            "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                        }
                                    },
                                    "block": {
                                        "header": {
                                            "version": {
                                                "block": "10",
                                                "app": "0"
                                            },
                                            "chain_id": "cosmoshub-2",
                                            "height": "12",
                                            "time": "2019-04-22T17:01:51.7013562+00:00",
                                            "last_block_id": {
                                                "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                "parts": {
                                                    "total": 1,
                                                    "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                }
                                            },
                                            "last_commit_hash": "21B9BC845AD2CB2C4193CDD17BFC506F1EBE5A7402E84AD96E64171287A34812",
                                            "data_hash": "970886F99E77ED0D60DA8FCE0447C2676E59F2F77302B0C4AA10E1D02F18EF73",
                                            "validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                            "next_validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                            "consensus_hash": "0F2908883A105C793B74495EB7D6DF2EEA479ED7FC9349206A65CB0F9987A0B8",
                                            "app_hash": "223BF64D4A01074DC523A80E76B9BBC786C791FB0A1893AC5B14866356FCFD6C",
                                            "last_results_hash": "",
                                            "evidence_hash": "",
                                            "proposer_address": "D540AB022088612AC74B287D076DBFBC4A377A2E"
                                        },
                                        "data": [
                                            "yQHwYl3uCkKoo2GaChRnd+THLQ2RM87nEZrE19910Z28ABIUWW/t8AtIMwcyU0sT32RcMDI9GF0aEAoFdWF0b20SBzEwMDAwMDASEwoNCgV1YXRvbRIEMzEwMRCd8gEaagom61rphyEDoJPxlcjRoNDtZ9xMdvs+lRzFaHe2dl2P5R2yVCWrsHISQKkqX5H1zXAIJuC57yw0Yb03Fwy75VRip0ZBtLiYsUqkOsPUoQZAhDNP+6LY+RUwz/nVzedkF0S29NZ32QXdGv0="
                                        ],
                                        "evidence": [
                                            {
                                                "type": "string",
                                                "height": 0,
                                                "time": 0,
                                                "total_voting_power": 0,
                                                "validator": {
                                                    "pub_key": {
                                                        "type": "tendermint/PubKeyEd25519",
                                                        "value": "A6DoBUypNtUAyEHWtQ9bFjfNg8Bo9CrnkUGl6k6OHN4="
                                                    },
                                                    "voting_power": 0,
                                                    "address": "string"
                                                }
                                            }
                                        ],
                                        "last_commit": {
                                            "height": 0,
                                            "round": 0,
                                            "block_id": {
                                                "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                "parts": {
                                                    "total": 1,
                                                    "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                }
                                            },
                                            "signatures": [
                                                {
                                                    "type": 2,
                                                    "height": "1262085",
                                                    "round": 0,
                                                    "block_id": {
                                                        "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                        "parts": {
                                                            "total": 1,
                                                            "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                        }
                                                    },
                                                    "timestamp": "2019-08-01T11:39:38.8672698+00:00",
                                                    "validator_address": "000001E443FD237E4B616E2FA69DF4EE3D49A94F",
                                                    "validator_index": 0,
                                                    "signature": "DBchvucTzAUEJnGYpNvMdqLhBAHG4Px8BsOBB3J3mAFCLGeuG7uJqy+nVngKzZdPhPi8RhmE/xcw/M9DOJjEDg=="
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/block_results": {
            "get": {
                "description": "Get block_results.\n",
                "operationId": "block_results",
                "summary": "Get block results at a specified height",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "height",
                        "in": "query",
                        "description": "height to return. If no height is provided, it will fetch information regarding the latest block.",
                        "type": "integer",
                        "default": 0
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Block results.",
                        "schema": {
                            "$ref": "#/definitions/BlockSearchResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "blocks": [
                                        {
                                            "block_id": {
                                                "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                "parts": {
                                                    "total": 1,
                                                    "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                }
                                            },
                                            "block": {
                                                "header": {
                                                    "version": {
                                                        "block": "10",
                                                        "app": "0"
                                                    },
                                                    "chain_id": "cosmoshub-2",
                                                    "height": "12",
                                                    "time": "2019-04-22T17:01:51.7013562+00:00",
                                                    "last_block_id": {
                                                        "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                        "parts": {
                                                            "total": 1,
                                                            "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                        }
                                                    },
                                                    "last_commit_hash": "21B9BC845AD2CB2C4193CDD17BFC506F1EBE5A7402E84AD96E64171287A34812",
                                                    "data_hash": "970886F99E77ED0D60DA8FCE0447C2676E59F2F77302B0C4AA10E1D02F18EF73",
                                                    "validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                                    "next_validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                                    "consensus_hash": "0F2908883A105C793B74495EB7D6DF2EEA479ED7FC9349206A65CB0F9987A0B8",
                                                    "app_hash": "223BF64D4A01074DC523A80E76B9BBC786C791FB0A1893AC5B14866356FCFD6C",
                                                    "last_results_hash": "",
                                                    "evidence_hash": "",
                                                    "proposer_address": "D540AB022088612AC74B287D076DBFBC4A377A2E"
                                                },
                                                "data": [
                                                    "yQHwYl3uCkKoo2GaChRnd+THLQ2RM87nEZrE19910Z28ABIUWW/t8AtIMwcyU0sT32RcMDI9GF0aEAoFdWF0b20SBzEwMDAwMDASEwoNCgV1YXRvbRIEMzEwMRCd8gEaagom61rphyEDoJPxlcjRoNDtZ9xMdvs+lRzFaHe2dl2P5R2yVCWrsHISQKkqX5H1zXAIJuC57yw0Yb03Fwy75VRip0ZBtLiYsUqkOsPUoQZAhDNP+6LY+RUwz/nVzedkF0S29NZ32QXdGv0="
                                                ],
                                                "evidence": [
                                                    {
                                                        "type": "string",
                                                        "height": 0,
                                                        "time": 0,
                                                        "total_voting_power": 0,
                                                        "validator": {
                                                            "pub_key": {
                                                                "type": "tendermint/PubKeyEd25519",
                                                                "value": "A6DoBUypNtUAyEHWtQ9bFjfNg8Bo9CrnkUGl6k6OHN4="
                                                            },
                                                            "voting_power": 0,
                                                            "address": "string"
                                                        }
                                                    }
                                                ],
                                                "last_commit": {
                                                    "height": 0,
                                                    "round": 0,
                                                    "block_id": {
                                                        "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                        "parts": {
                                                            "total": 1,
                                                            "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                        }
                                                    },
                                                    "signatures": [
                                                        {
                                                            "type": 2,
                                                            "height": "1262085",
                                                            "round": 0,
                                                            "block_id": {
                                                                "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                                "parts": {
                                                                    "total": 1,
                                                                    "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                                }
                                                            },
                                                            "timestamp": "2019-08-01T11:39:38.8672698+00:00",
                                                            "validator_address": "000001E443FD237E4B616E2FA69DF4EE3D49A94F",
                                                            "validator_index": 0,
                                                            "signature": "DBchvucTzAUEJnGYpNvMdqLhBAHG4Px8BsOBB3J3mAFCLGeuG7uJqy+nVngKzZdPhPi8RhmE/xcw/M9DOJjEDg=="
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    ],
                                    "total_count": 2
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/commit": {
            "get": {
                "description": "Get Commit.\n",
                "operationId": "commit",
                "summary": "Get commit results at a specified height",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "height",
                        "in": "query",
                        "description": "height to return. If no height is provided, it will fetch commit information regarding the latest block.",
                        "type": "integer",
                        "default": 0
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Commit results.\n\ncanonical switches from false to true for block H once block H+1 has been committed. Until then it's subjective and only reflects what this node has seen so far.\n",
                        "schema": {
                            "$ref": "#/definitions/CommitResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "signed_header": {
                                        "header": {
                                            "version": {
                                                "block": "10",
                                                "app": "0"
                                            },
                                            "chain_id": "cosmoshub-2",
                                            "height": "12",
                                            "time": "2019-04-22T17:01:51.7013562+00:00",
                                            "last_block_id": {
                                                "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                "parts": {
                                                    "total": 1,
                                                    "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                }
                                            },
                                            "last_commit_hash": "21B9BC845AD2CB2C4193CDD17BFC506F1EBE5A7402E84AD96E64171287A34812",
                                            "data_hash": "970886F99E77ED0D60DA8FCE0447C2676E59F2F77302B0C4AA10E1D02F18EF73",
                                            "validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                            "next_validators_hash": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0",
                                            "consensus_hash": "0F2908883A105C793B74495EB7D6DF2EEA479ED7FC9349206A65CB0F9987A0B8",
                                            "app_hash": "223BF64D4A01074DC523A80E76B9BBC786C791FB0A1893AC5B14866356FCFD6C",
                                            "last_results_hash": "",
                                            "evidence_hash": "",
                                            "proposer_address": "D540AB022088612AC74B287D076DBFBC4A377A2E"
                                        },
                                        "commit": {
                                            "height": "1311801",
                                            "round": 0,
                                            "block_id": {
                                                "hash": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7",
                                                "parts": {
                                                    "total": 1,
                                                    "hash": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                                                }
                                            },
                                            "signatures": [
                                                {
                                                    "block_id_flag": 2,
                                                    "validator_address": "000001E443FD237E4B616E2FA69DF4EE3D49A94F",
                                                    "timestamp": "2019-04-22T17:01:58.3766297+00:00",
                                                    "signature": "14jaTQXYRt8kbLKEhdHq7AXycrFImiLuZx50uOjs2+Zv+2i7RTG/jnObD07Jo2ubZ8xd7bNBJMqkgtkd0oQHAw=="
                                                }
                                            ]
                                        }
                                    },
                                    "canonical": true
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/validators": {
            "get": {
                "description": "Get Validators. Validators are sorted first by voting power (descending), then by address (ascending).\n",
                "operationId": "validators",
                "summary": "Get validator set at a specified height",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "height",
                        "in": "query",
                        "description": "height to return. If no height is provided, it will fetch validator set which corresponds to the latest block.",
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (1-based)",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of entries per page (max: 100)",
                        "type": "integer",
                        "default": 30
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Commit results.",
                        "schema": {
                            "$ref": "#/definitions/ValidatorsResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "block_height": "55",
                                    "validators": [
                                        {
                                            "address": "000001E443FD237E4B616E2FA69DF4EE3D49A94F",
                                            "pub_key": {
                                                "type": "tendermint/PubKeyEd25519",
                                                "value": "9tK9IT+FPdf2qm+5c2qaxi10sWP+3erWTKgftn2PaQM="
                                            },
                                            "voting_power": "239727",
                                            "proposer_priority": "-11896414"
                                        }
                                    ],
                                    "count": "1",
                                    "total": "25"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/genesis": {
            "get": {
                "description": "Get the genesis document.\n",
                "operationId": "genesis",
                "summary": "Get Genesis",
                "tags": [
                    "Info"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Genesis results.",
                        "schema": {
                            "$ref": "#/definitions/GenesisResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "genesis": {
                                        "genesis_time": "2019-04-22T17:00:00+00:00",
                                        "chain_id": "cosmoshub-2",
                                        "initial_height": "2",
                                        "consensus_params": {
                                            "block": {
                                                "max_bytes": "22020096",
                                                "max_gas": "1000",
                                                "time_iota_ms": "1000"
                                            },
                                            "evidence": {
                                                "max_age": "100000"
                                            },
                                            "validator": {
                                                "pub_key_types": [
                                                    "ed25519"
                                                ]
                                            }
                                        },
                                        "validators": [
                                            {
                                                "address": "B00A6323737F321EB0B8D59C6FD497A14B60938A",
                                                "pub_key": {
                                                    "type": "tendermint/PubKeyEd25519",
                                                    "value": "cOQZvh/h9ZioSeUMZB/1Vy1Xo5x2sjrVjlE/qHnYifM="
                                                },
                                                "power": "9328525",
                                                "name": "Certus One"
                                            }
                                        ],
                                        "app_hash": "",
                                        "app_state": {}
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/genesis_chunked": {
            "get": {
                "description": "Get genesis document in a paginated/chunked format to make it\neasier to iterate through larger genesis structures.\n",
                "operationId": "genesis_chunked",
                "summary": "Get Genesis in paginated chunks",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "chunkID",
                        "in": "query",
                        "description": "Sequence number of the chunk to download.",
                        "type": "integer",
                        "default": 0
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Genesis results.",
                        "schema": {
                            "$ref": "#/definitions/GenesisChunkedResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "chunk": 0,
                                    "total": 1,
                                    "data": "Z2VuZXNpcwo="
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/dump_consensus_state": {
            "get": {
                "description": "Get consensus state.\n\nNot safe to call from inside the ABCI application during a block execution.\n",
                "operationId": "dump_consensus_state",
                "summary": "Get consensus state",
                "tags": [
                    "Info"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Complete consensus state.\n\nSee https://pkg.go.dev/github.com/tendermint/tendermint/types?tab=doc#Vote.String for Vote string description.\n",
                        "schema": {
                            "$ref": "#/definitions/DumpConsensusResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "round_state": {
                                        "height": "1311801",
                                        "round": 0,
                                        "step": 3,
                                        "start_time": "2019-08-05T11:28:49.0646588+00:00",
                                        "commit_time": "2019-08-05T11:28:44.0646588+00:00",
                                        "validators": {
                                            "validators": [
                                                {
                                                    "address": "000001E443FD237E4B616E2FA69DF4EE3D49A94F",
                                                    "pub_key": {
                                                        "type": "tendermint/PubKeyEd25519",
                                                        "value": "9tK9IT+FPdf2qm+5c2qaxi10sWP+3erWTKgftn2PaQM="
                                                    },
                                                    "voting_power": "239727",
                                                    "proposer_priority": "-11896414"
                                                }
                                            ],
                                            "proposer": {
                                                "address": "000001E443FD237E4B616E2FA69DF4EE3D49A94F",
                                                "pub_key": {
                                                    "type": "tendermint/PubKeyEd25519",
                                                    "value": "9tK9IT+FPdf2qm+5c2qaxi10sWP+3erWTKgftn2PaQM="
                                                },
                                                "voting_power": "239727",
                                                "proposer_priority": "-11896414"
                                            }
                                        },
                                        "locked_round": -1,
                                        "valid_round": "-1",
                                        "votes": [
                                            {
                                                "round": "0",
                                                "prevotes": [
                                                    "nil-Vote",
                                                    "Vote{19:46A3F8B8393B 1311801/00/1(Prevote) 000000000000 64CE682305CB @ 2019-08-05T11:28:47.374703444Z}"
                                                ],
                                                "prevotes_bit_array": "BA{100:___________________x________________________________________________________________________________} 209706/170220253 = 0.00",
                                                "precommits": [
                                                    "nil-Vote"
                                                ],
                                                "precommits_bit_array": "BA{100:____________________________________________________________________________________________________} 0/170220253 = 0.00"
                                            }
                                        ],
                                        "commit_round": -1,
                                        "last_commit": {
                                            "votes": [
                                                "Vote{0:000001E443FD 1311800/00/2(Precommit) 3071ADB27D1A 77EE1B6B6847 @ 2019-08-05T11:28:43.810128139Z}"
                                            ],
                                            "votes_bit_array": "BA{100:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} 170220253/170220253 = 1.00",
                                            "peer_maj_23s": {}
                                        },
                                        "last_validators": {
                                            "validators": [
                                                {
                                                    "address": "000001E443FD237E4B616E2FA69DF4EE3D49A94F",
                                                    "pub_key": {
                                                        "type": "tendermint/PubKeyEd25519",
                                                        "value": "9tK9IT+FPdf2qm+5c2qaxi10sWP+3erWTKgftn2PaQM="
                                                    },
                                                    "voting_power": "239727",
                                                    "proposer_priority": "-11896414"
                                                }
                                            ],
                                            "proposer": {
                                                "address": "000001E443FD237E4B616E2FA69DF4EE3D49A94F",
                                                "pub_key": {
                                                    "type": "tendermint/PubKeyEd25519",
                                                    "value": "9tK9IT+FPdf2qm+5c2qaxi10sWP+3erWTKgftn2PaQM="
                                                },
                                                "voting_power": "239727",
                                                "proposer_priority": "-11896414"
                                            }
                                        },
                                        "triggered_timeout_precommit": false
                                    },
                                    "peers": [
                                        {
                                            "node_address": "357f6a6c1d27414579a8185060aa8adf9815c43c@68.183.41.207:26656",
                                            "peer_state": {
                                                "round_state": {
                                                    "height": "1311801",
                                                    "round": "0",
                                                    "step": 3,
                                                    "start_time": "2019-08-05T11:28:49.2173086+00:00",
                                                    "proposal": false,
                                                    "proposal_block_parts_header": {
                                                        "total": 0,
                                                        "hash": ""
                                                    },
                                                    "proposal_pol_round": -1,
                                                    "proposal_pol": "____________________________________________________________________________________________________",
                                                    "prevotes": "___________________x________________________________________________________________________________",
                                                    "precommits": "____________________________________________________________________________________________________",
                                                    "last_commit_round": 0,
                                                    "last_commit": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                                                    "catchup_commit_round": -1,
                                                    "catchup_commit": "____________________________________________________________________________________________________"
                                                },
                                                "stats": {
                                                    "votes": "1159558",
                                                    "block_parts": "4786"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/consensus_state": {
            "get": {
                "description": "Get consensus state.\n\nNot safe to call from inside the ABCI application during a block execution.\n",
                "operationId": "consensus_state",
                "summary": "Get consensus state",
                "tags": [
                    "Info"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "consensus state results.",
                        "schema": {
                            "$ref": "#/definitions/ConsensusStateResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "round_state": {
                                        "height/round/step": "1262197/0/8",
                                        "start_time": "2019-08-01T11:52:38.9627303+00:00",
                                        "proposal_block_hash": "634ADAF1F402663BEC2ABC340ECE8B4B45AA906FA603272ACC5F5EED3097E009",
                                        "locked_block_hash": "634ADAF1F402663BEC2ABC340ECE8B4B45AA906FA603272ACC5F5EED3097E009",
                                        "valid_block_hash": "634ADAF1F402663BEC2ABC340ECE8B4B45AA906FA603272ACC5F5EED3097E009",
                                        "height_vote_set": [
                                            {
                                                "round": 0,
                                                "prevotes": [
                                                    "Vote{0:000001E443FD 1262197/00/1(Prevote) 634ADAF1F402 7BB974E1BA40 @ 2019-08-01T11:52:35.513572509Z}",
                                                    "nil-Vote"
                                                ],
                                                "prevotes_bit_array": "BA{100:xxxxxxxxxxxxxxxxx_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} 169753436/170151262 = 1.00",
                                                "precommits": [
                                                    "Vote{5:18C78D135C9D 1262197/00/2(Precommit) 634ADAF1F402 8B5EFFFEABCD @ 2019-08-01T11:52:36.25600005Z}",
                                                    "nil-Vote"
                                                ],
                                                "precommits_bit_array": "BA{100:xxxxxx_xxxxx_xxxx_x_xxx_xx_xx_xx__x_x_x__xxxxxxxxxxxxxx_xxxx_xx_xxxxxx_xxxxxxxx_xxxx_xxx_x_xxxx__xxx} 118726247/170151262 = 0.70"
                                            }
                                        ],
                                        "proposer": {
                                            "address": "D540AB022088612AC74B287D076DBFBC4A377A2E",
                                            "index": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/consensus_params": {
            "get": {
                "description": "Get consensus parameters.\n",
                "operationId": "consensus_params",
                "summary": "Get consensus parameters",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "height",
                        "in": "query",
                        "description": "height to return. If no height is provided, it will fetch commit information regarding the latest block.",
                        "type": "integer",
                        "default": 0
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "consensus parameters results.",
                        "schema": {
                            "$ref": "#/definitions/ConsensusParamsResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "block_height": "1",
                                    "consensus_params": {
                                        "block": {
                                            "max_bytes": "22020096",
                                            "max_gas": "1000",
                                            "time_iota_ms": "1000"
                                        },
                                        "evidence": {
                                            "max_age": "100000"
                                        },
                                        "validator": {
                                            "pub_key_types": [
                                                "ed25519"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/unconfirmed_txs": {
            "get": {
                "description": "Get list of unconfirmed transactions\n",
                "operationId": "unconfirmed_txs",
                "summary": "Get the list of unconfirmed transactions",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (1-based)",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of entries per page (max: 100)",
                        "type": "integer",
                        "default": 30
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of unconfirmed transactions",
                        "schema": {
                            "$ref": "#/definitions/UnconfirmedTransactionsResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "n_txs": "82",
                                    "total": "82",
                                    "total_bytes": "19974",
                                    "txs": [
                                        "gAPwYl3uCjCMTXENChSMnIkb5ZpYHBKIZqecFEV2tuZr7xIUA75/FmYq9WymsOBJ0XSJ8yV8zmQKMIxNcQ0KFIyciRvlmlgcEohmp5wURXa25mvvEhQbrvwbvlNiT+Yjr86G+YQNx7kRVgowjE1xDQoUjJyJG+WaWBwSiGannBRFdrbma+8SFK2m+1oxgILuQLO55n8mWfnbIzyPCjCMTXENChSMnIkb5ZpYHBKIZqecFEV2tuZr7xIUQNGfkmhTNMis4j+dyMDIWXdIPiYKMIxNcQ0KFIyciRvlmlgcEohmp5wURXa25mvvEhS8sL0D0wwgGCItQwVowak5YB38KRIUCg4KBXVhdG9tEgUxMDA1NBDoxRgaagom61rphyECn8x7emhhKdRCB2io7aS/6Cpuq5NbVqbODmqOT3jWw6kSQKUresk+d+Gw0BhjiggTsu8+1voW+VlDCQ1GRYnMaFOHXhyFv7BCLhFWxLxHSAYT8a5XqoMayosZf9mANKdXArA="
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/num_unconfirmed_txs": {
            "get": {
                "description": "Get data about unconfirmed transactions\n",
                "operationId": "num_unconfirmed_txs",
                "summary": "Get data about unconfirmed transactions",
                "tags": [
                    "Info"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "status about unconfirmed transactions",
                        "schema": {
                            "$ref": "#/definitions/NumUnconfirmedTransactionsResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "n_txs": "31",
                                    "total": "82",
                                    "total_bytes": "19974"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/tx_search": {
            "get": {
                "description": "Search for transactions w/ their results.\n\nSee /subscribe for the query syntax.\n",
                "operationId": "tx_search",
                "summary": "Search for transactions",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "prove",
                        "in": "query",
                        "description": "Include proofs of the transactions inclusion in the block",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (1-based)",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of entries per page (max: 100)",
                        "type": "integer",
                        "default": 30
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order in which transactions are sorted (\"asc\" or \"desc\"), by height & index. If empty, default sorting will be still applied.",
                        "type": "string",
                        "default": "desc"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of transactions",
                        "schema": {
                            "$ref": "#/definitions/TxSearchResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "txs": [
                                        {
                                            "hash": "D70952032620CC4E2737EB8AC379806359D8E0B17B0488F627997A0B043ABDED",
                                            "height": "1000",
                                            "index": 0,
                                            "tx_result": {
                                                "log": "[{\"msg_index\":\"0\",\"success\":true,\"log\":\"\"}]",
                                                "gas_wanted": "200000",
                                                "gas_used": "28596",
                                                "tags": {
                                                    "key": "YWN0aW9u",
                                                    "value": "c2VuZA==",
                                                    "index": false
                                                }
                                            },
                                            "tx": "5wHwYl3uCkaoo2GaChQmSIu8hxpJxLcCuIi8fiHN4TMwrRIU/Af1cEG7Rcs/6LjTl7YjRSymJfYaFAoFdWF0b20SCzE0OTk5OTk1MDAwEhMKDQoFdWF0b20SBDUwMDAQwJoMGmoKJuta6YchAwswBShaB1wkZBctLIhYqBC3JrAI28XGzxP+rVEticGEEkAc+khTkKL9CDE47aDvjEHvUNt+izJfT4KVF2v2JkC+bmlH9K08q3PqHeMI9Z5up+XMusnTqlP985KF+SI5J3ZOIhhNYWRlIGJ5IENpcmNsZSB3aXRoIGxvdmU=",
                                            "proof": {
                                                "RootHash": "72FE6BF6D4109105357AECE0A82E99D0F6288854D16D8767C5E72C57F876A14D",
                                                "Data": "5wHwYl3uCkaoo2GaChQmSIu8hxpJxLcCuIi8fiHN4TMwrRIU/Af1cEG7Rcs/6LjTl7YjRSymJfYaFAoFdWF0b20SCzE0OTk5OTk1MDAwEhMKDQoFdWF0b20SBDUwMDAQwJoMGmoKJuta6YchAwswBShaB1wkZBctLIhYqBC3JrAI28XGzxP+rVEticGEEkAc+khTkKL9CDE47aDvjEHvUNt+izJfT4KVF2v2JkC+bmlH9K08q3PqHeMI9Z5up+XMusnTqlP985KF+SI5J3ZOIhhNYWRlIGJ5IENpcmNsZSB3aXRoIGxvdmU=",
                                                "Proof": {
                                                    "total": "2",
                                                    "index": "0",
                                                    "leaf_hash": "eoJxKCzF3m72Xiwb/Q43vJ37/2Sx8sfNS9JKJohlsYI=",
                                                    "aunts": [
                                                        "eWb+HG/eMmukrQj4vNGyFYb3nKQncAWacq4HF5eFzDY="
                                                    ]
                                                }
                                            }
                                        }
                                    ],
                                    "total_count": "2"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/block_search": {
            "get": {
                "description": "Search for blocks by BeginBlock and EndBlock events.\n\nSee /subscribe for the query syntax.\n",
                "operationId": "block_search",
                "summary": "Search for blocks by BeginBlock and EndBlock events",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (1-based)",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of entries per page (max: 100)",
                        "type": "integer",
                        "default": 30
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order in which blocks are sorted (\"asc\" or \"desc\"), by height. If empty, default sorting will be still applied.",
                        "type": "string",
                        "default": "desc"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "List of paginated blocks matching the search criteria.",
                        "schema": {
                            "$ref": "#/definitions/BlockResultsResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "height": "12",
                                    "txs_results": [
                                        {
                                            "code": "0",
                                            "data": "",
                                            "log": "not enough gas",
                                            "info": "",
                                            "gas_wanted": "100",
                                            "gas_used": "100",
                                            "events": [
                                                {
                                                    "type": "app",
                                                    "attributes": [
                                                        {
                                                            "key": "YWN0aW9u",
                                                            "value": "c2VuZA==",
                                                            "index": false
                                                        }
                                                    ]
                                                }
                                            ],
                                            "codespace": "ibc"
                                        }
                                    ],
                                    "total_gas_used": "100",
                                    "begin_block_events": [
                                        {
                                            "type": "app",
                                            "attributes": [
                                                {
                                                    "key": "YWN0aW9u",
                                                    "value": "c2VuZA==",
                                                    "index": false
                                                }
                                            ]
                                        }
                                    ],
                                    "end_block": [
                                        {
                                            "type": "app",
                                            "attributes": [
                                                {
                                                    "key": "YWN0aW9u",
                                                    "value": "c2VuZA==",
                                                    "index": false
                                                }
                                            ]
                                        }
                                    ],
                                    "validator_updates": [
                                        {
                                            "pub_key": {
                                                "type": "tendermint/PubKeyEd25519",
                                                "value": "9tK9IT+FPdf2qm+5c2qaxi10sWP+3erWTKgftn2PaQM="
                                            },
                                            "power": "300"
                                        }
                                    ],
                                    "consensus_params_updates": {
                                        "block": {
                                            "max_bytes": "22020096",
                                            "max_gas": "1000",
                                            "time_iota_ms": "1000"
                                        },
                                        "evidence": {
                                            "max_age": "100000"
                                        },
                                        "validator": {
                                            "pub_key_types": [
                                                "ed25519"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/tx": {
            "get": {
                "description": "Get a transaction\n",
                "operationId": "tx",
                "summary": "Get transactions by hash",
                "tags": [
                    "Info"
                ],
                "parameters": [
                    {
                        "name": "hash",
                        "in": "query",
                        "description": "transaction Hash to retrive",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "prove",
                        "in": "query",
                        "description": "Include proofs of the transactions inclusion in the block",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get a transaction",
                        "schema": {
                            "$ref": "#/definitions/TxResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "hash": "D70952032620CC4E2737EB8AC379806359D8E0B17B0488F627997A0B043ABDED",
                                    "height": "1000",
                                    "index": 0,
                                    "tx_result": {
                                        "log": "[{\"msg_index\":\"0\",\"success\":true,\"log\":\"\"}]",
                                        "gas_wanted": "200000",
                                        "gas_used": "28596",
                                        "tags": [
                                            {
                                                "key": "YWN0aW9u",
                                                "value": "c2VuZA==",
                                                "index": false
                                            }
                                        ]
                                    },
                                    "tx": "5wHwYl3uCkaoo2GaChQmSIu8hxpJxLcCuIi8fiHN4TMwrRIU/Af1cEG7Rcs/6LjTl7YjRSymJfYaFAoFdWF0b20SCzE0OTk5OTk1MDAwEhMKDQoFdWF0b20SBDUwMDAQwJoMGmoKJuta6YchAwswBShaB1wkZBctLIhYqBC3JrAI28XGzxP+rVEticGEEkAc+khTkKL9CDE47aDvjEHvUNt+izJfT4KVF2v2JkC+bmlH9K08q3PqHeMI9Z5up+XMusnTqlP985KF+SI5J3ZOIhhNYWRlIGJ5IENpcmNsZSB3aXRoIGxvdmU="
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/abci_info": {
            "get": {
                "description": "Get some info about the application.\n",
                "operationId": "abci_info",
                "summary": "Get some info about the application.",
                "tags": [
                    "ABCI"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get some info about the application.",
                        "schema": {
                            "$ref": "#/definitions/ABCIInfoResponse"
                        },
                        "examples": {
                            "application/json": {
                                "jsonrpc": "2.0",
                                "id": 0,
                                "result": {
                                    "response": {
                                        "data": "{\"size\":0}",
                                        "version": "0.16.1",
                                        "app_version": "1314126"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/abci_query": {
            "get": {
                "description": "Query the application for some information.\n",
                "operationId": "abci_query",
                "summary": "Query the application for some information.",
                "tags": [
                    "ABCI"
                ],
                "parameters": [
                    {
                        "name": "path",
                        "in": "query",
                        "description": "Path to the data (\"/a/b/c\")",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "data",
                        "in": "query",
                        "description": "Data",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "description": "Height (0 means latest)",
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "prove",
                        "in": "query",
                        "description": "Include proofs of the transactions inclusion in the block",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Response of the submitted query",
                        "schema": {
                            "$ref": "#/definitions/ABCIQueryResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "",
                                "result": {
                                    "response": {
                                        "log": "exists",
                                        "height": "0",
                                        "proof": "010114FED0DAD959F36091AD761C922ABA3CBF1D8349990101020103011406AA2262E2F448242DF2C2607C3CDC705313EE3B0001149D16177BC71E445476174622EA559715C293740C",
                                        "value": "61626364",
                                        "key": "61626364",
                                        "index": "-1",
                                        "code": "0"
                                    }
                                },
                                "id": 0,
                                "jsonrpc": "2.0"
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/broadcast_evidence": {
            "get": {
                "description": "Broadcast evidence of the misbehavior.\n",
                "operationId": "broadcast_evidence",
                "summary": "Broadcast evidence of the misbehavior.",
                "tags": [
                    "Evidence"
                ],
                "parameters": [
                    {
                        "name": "evidence",
                        "in": "query",
                        "description": "JSON evidence",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Broadcast evidence of the misbehavior.",
                        "schema": {
                            "$ref": "#/definitions/BroadcastEvidenceResponse"
                        },
                        "examples": {
                            "application/json": {
                                "error": "",
                                "result": "",
                                "id": 0,
                                "jsonrpc": "2.0"
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "error": "Description of failure"
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "description": "Base index for endpoint",
                "operationId": "get",
                "summary": "Base index for endpoint",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Empty",
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        },
                        "examples": {
                            "application/json": {
                                "id": 0,
                                "jsonrpc": "2.0",
                                "result": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Support the JSONRPC over HTTP endpoint, see https://docs.tendermint.com/master/rpc/",
                "operationId": "jsonrpc-http",
                "summary": "JSONRPC/HTTP",
                "tags": [
                    "JSONRPC"
                ],
                "responses": {
                    "200": {
                        "description": "null"
                    }
                }
            }
        }
    },
    "definitions": {
        "JSONRPC": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                }
            }
        },
        "EmptyResponse": {
            "description": "Empty Response",
            "allOf": [
                {
                    "$ref": "#/definitions/JSONRPC"
                },
                {
                    "type": "object",
                    "properties": {
                        "result": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            ]
        },
        "ErrorResponse": {
            "description": "Error Response",
            "allOf": [
                {
                    "$ref": "#/definitions/JSONRPC"
                },
                {
                    "type": "object",
                    "properties": {
                        "error": {
                            "type": "string",
                            "example": "Description of failure"
                        }
                    }
                }
            ]
        },
        "ProtocolVersion": {
            "type": "object",
            "properties": {
                "p2p": {
                    "type": "string",
                    "example": "7"
                },
                "block": {
                    "type": "string",
                    "example": "10"
                },
                "app": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "PubKey": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "example": "tendermint/PubKeyEd25519"
                },
                "value": {
                    "type": "string",
                    "example": "A6DoBUypNtUAyEHWtQ9bFjfNg8Bo9CrnkUGl6k6OHN4="
                }
            }
        },
        "NodeInfo": {
            "type": "object",
            "properties": {
                "protocol_version": {
                    "$ref": "#/definitions/ProtocolVersion"
                },
                "id": {
                    "type": "string",
                    "example": "5576458aef205977e18fd50b274e9b5d9014525a"
                },
                "listen_addr": {
                    "type": "string",
                    "example": "tcp://0.0.0.0:26656"
                },
                "network": {
                    "type": "string",
                    "example": "cosmoshub-2"
                },
                "version": {
                    "type": "string",
                    "example": "0.32.1"
                },
                "channels": {
                    "type": "string",
                    "example": "4020212223303800"
                },
                "moniker": {
                    "type": "string",
                    "example": "moniker-node"
                },
                "other": {
                    "type": "object",
                    "properties": {
                        "tx_index": {
                            "type": "string",
                            "example": "on"
                        },
                        "rpc_address": {
                            "type": "string",
                            "example": "tcp://0.0.0.0:26657"
                        }
                    }
                }
            }
        },
        "SyncInfo": {
            "type": "object",
            "properties": {
                "latest_block_hash": {
                    "type": "string",
                    "example": "790BA84C3545FCCC49A5C629CEE6EA58A6E875C3862175BDC11EE7AF54703501"
                },
                "latest_app_hash": {
                    "type": "string",
                    "example": "C9AEBB441B787D9F1D846DE51F3826F4FD386108B59B08239653ABF59455C3F8"
                },
                "latest_block_height": {
                    "type": "string",
                    "example": "1262196"
                },
                "latest_block_time": {
                    "type": "string",
                    "example": "2019-08-01T11:52:22.818762194Z"
                },
                "earliest_block_hash": {
                    "type": "string",
                    "example": "790BA84C3545FCCC49A5C629CEE6EA58A6E875C3862175BDC11EE7AF54703501"
                },
                "earliest_app_hash": {
                    "type": "string",
                    "example": "C9AEBB441B787D9F1D846DE51F3826F4FD386108B59B08239653ABF59455C3F8"
                },
                "earliest_block_height": {
                    "type": "string",
                    "example": "1262196"
                },
                "earliest_block_time": {
                    "type": "string",
                    "example": "2019-08-01T11:52:22.818762194Z"
                },
                "max_peer_block_height": {
                    "type": "string",
                    "example": "1262196"
                },
                "catching_up": {
                    "type": "boolean",
                    "example": false
                },
                "total_synced_time": {
                    "type": "string",
                    "example": "1000000000"
                },
                "remaining_time": {
                    "type": "string",
                    "example": "0"
                },
                "total_snapshots": {
                    "type": "string",
                    "example": "10"
                },
                "chunk_process_avg_time": {
                    "type": "string",
                    "example": "1000000000"
                },
                "snapshot_height": {
                    "type": "string",
                    "example": "1262196"
                },
                "snapshot_chunks_count": {
                    "type": "string",
                    "example": "10"
                },
                "snapshot_chunks_total": {
                    "type": "string",
                    "example": "100"
                },
                "backfilled_blocks": {
                    "type": "string",
                    "example": "10"
                },
                "backfill_blocks_total": {
                    "type": "string",
                    "example": "100"
                }
            }
        },
        "ValidatorInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "5D6A51A8E9899C44079C6AF90618BA0369070E6E"
                },
                "pub_key": {
                    "$ref": "#/definitions/PubKey"
                },
                "voting_power": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "Status": {
            "description": "Status Response",
            "type": "object",
            "properties": {
                "node_info": {
                    "$ref": "#/definitions/NodeInfo"
                },
                "sync_info": {
                    "$ref": "#/definitions/SyncInfo"
                },
                "validator_info": {
                    "$ref": "#/definitions/ValidatorInfo"
                }
            }
        },
        "StatusResponse": {
            "description": "Status Response",
            "allOf": [
                {
                    "$ref": "#/definitions/JSONRPC"
                },
                {
                    "type": "object",
                    "properties": {
                        "result": {
                            "$ref": "#/definitions/Status"
                        }
                    }
                }
            ]
        },
        "Monitor": {
            "type": "object",
            "properties": {
                "Active": {
                    "type": "boolean",
                    "example": true
                },
                "Start": {
                    "type": "string",
                    "example": "2019-07-31T14:31:28.66Z"
                },
                "Duration": {
                    "type": "string",
                    "example": "168901060000000"
                },
                "Idle": {
                    "type": "string",
                    "example": "168901040000000"
                },
                "Bytes": {
                    "type": "string",
                    "example": "5"
                },
                "Samples": {
                    "type": "string",
                    "example": "1"
                },
                "InstRate": {
                    "type": "string",
                    "example": "0"
                },
                "CurRate": {
                    "type": "string",
                    "example": "0"
                },
                "AvgRate": {
                    "type": "string",
                    "example": "0"
                },
                "PeakRate": {
                    "type": "string",
                    "example": "0"
                },
                "BytesRem": {
                    "type": "string",
                    "example": "0"
                },
                "TimeRem": {
                    "type": "string",
                    "example": "0"
                },
                "Progress": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "Channel": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "example": 48
                },
                "SendQueueCapacity": {
                    "type": "string",
                    "example": "1"
                },
                "SendQueueSize": {
                    "type": "string",
                    "example": "0"
                },
                "Priority": {
                    "type": "string",
                    "example": "5"
                },
                "RecentlySent": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "ConnectionStatus": {
            "type": "object",
            "properties": {
                "Duration": {
                    "type": "string",
                    "example": "168901057956119"
                },
                "SendMonitor": {
                    "$ref": "#/definitions/Monitor"
                },
                "RecvMonitor": {
                    "$ref": "#/definitions/Monitor"
                },
                "Channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Channel"
                    }
                }
            }
        },
        "Peer": {
            "type": "object",
            "properties": {
                "node_id": {
                    "type": "string",
                    "example": ""
                },
                "url": {
                    "type": "string",
                    "example": "<id>@95.179.155.35:2385>"
                }
            }
        },
        "NetInfo": {
            "type": "object",
            "properties": {
                "listening": {
                    "type": "boolean",
                    "example": true
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": "Listener(@)"
                    }
                },
                "n_peers": {
                    "type": "string",
                    "example": "1"
                },
                "peers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Peer"
                    }
                }
            }
        },
        "NetInfoResponse": {
            "description": "NetInfo Response",
            "allOf": [
                {
                    "$ref": "#/definitions/JSONRPC"
                },
                {
                    "type": "object",
                    "properties": {
                        "result": {
                            "$ref": "#/definitions/NetInfo"
                        }
                    }
                }
            ]
        },
        "BlockMeta": {
            "type": "object",
            "properties": {
                "block_id": {
                    "$ref": "#/definitions/BlockID"
                },
                "block_size": {
                    "type": "integer",
                    "example": 1000000
                },
                "header": {
                    "$ref": "#/definitions/BlockHeader"
                },
                "num_txs": {
                    "type": "string",
                    "example": "54"
                }
            }
        },
        "Blockchain": {
            "required": [
                "last_height",
                "block_metas"
            ],
            "type": "object",
            "properties": {
                "last_height": {
                    "type": "string",
                    "example": "1276718"
                },
                "block_metas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BlockMeta"
                    }
                }
            }
        },
        "BlockchainResponse": {
            "description": "Blockchain info",
            "allOf": [
                {
                    "$ref": "#/definitions/JSONRPC"
                },
                {
                    "type": "object",
                    "properties": {
                        "result": {
                            "$ref": "#/definitions/Blockchain"
                        }
                    }
                }
            ]
        },
        "Commit": {
            "required": [
                "type",
                "height",
                "round",
                "block_id",
                "timestamp",
                "validator_address",
                "validator_index",
                "signature"
            ],
            "properties": {
                "type": {
                    "type": "integer",
                    "example": 2
                },
                "height": {
                    "type": "string",
                    "example": "1262085"
                },
                "round": {
                    "type": "integer",
                    "example": 0
                },
                "block_id": {
                    "$ref": "#/definitions/BlockID"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2019-08-01T11:39:38.867269833Z"
                },
                "validator_address": {
                    "type": "string",
                    "example": "000001E443FD237E4B616E2FA69DF4EE3D49A94F"
                },
                "validator_index": {
                    "type": "integer",
                    "example": 0
                },
                "signature": {
                    "type": "string",
                    "example": "DBchvucTzAUEJnGYpNvMdqLhBAHG4Px8BsOBB3J3mAFCLGeuG7uJqy+nVngKzZdPhPi8RhmE/xcw/M9DOJjEDg=="
                }
            }
        },
        "Block": {
            "type": "object",
            "properties": {
                "header": {
                    "$ref": "#/definitions/BlockHeader"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "example": "yQHwYl3uCkKoo2GaChRnd+THLQ2RM87nEZrE19910Z28ABIUWW/t8AtIMwcyU0sT32RcMDI9GF0aEAoFdWF0b20SBzEwMDAwMDASEwoNCgV1YXRvbRIEMzEwMRCd8gEaagom61rphyEDoJPxlcjRoNDtZ9xMdvs+lRzFaHe2dl2P5R2yVCWrsHISQKkqX5H1zXAIJuC57yw0Yb03Fwy75VRip0ZBtLiYsUqkOsPUoQZAhDNP+6LY+RUwz/nVzedkF0S29NZ32QXdGv0="
                    }
                },
                "evidence": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Evidence"
                    }
                },
                "last_commit": {
                    "type": "object",
                    "properties": {
                        "height": {
                            "type": "integer"
                        },
                        "round": {
                            "type": "integer"
                        },
                        "block_id": {
                            "$ref": "#/definitions/BlockID"
                        },
                        "signatures": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Commit"
                            }
                        }
                    }
                }
            }
        },
        "Evidence": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "time": {
                    "type": "integer"
                },
                "total_voting_power": {
                    "type": "integer"
                },
                "validator": {
                    "$ref": "#/definitions/Validator"
                }
            }
        },
        "BlockComplete": {
            "type": "object",
            "properties": {
                "block_id": {
                    "$ref": "#/definitions/BlockID"
                },
                "block": {
                    "$ref": "#/definitions/Block"
                }
            }
        },
        "BlockResponse": {
            "description": "Block info",
            "allOf": [
                {
                    "$ref": "#/definitions/JSONRPC"
                },
                {
                    "type": "object",
                    "properties": {
                        "result": {
                            "$ref": "#/definitions/BlockComplete"
                        }
                    }
                }
            ]
        },
        "HeaderResponse": {
            "description": "Block Header info",
            "allOf": [
                {
                    "$ref": "#/definitions/JSONRPC"
                },
                {
                    "type": "object",
                    "properties": {
                        "result": {
                            "$ref": "#/definitions/BlockHeader"
                        }
                    }
                }
            ]
        },
        "BlockResultsResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "height"
                    ],
                    "type": "object",
                    "properties": {
                        "height": {
                            "type": "string",
                            "example": "12"
                        },
                        "txs_results": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "0"
                                    },
                                    "data": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "log": {
                                        "type": "string",
                                        "example": "not enough gas"
                                    },
                                    "info": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "gas_wanted": {
                                        "type": "string",
                                        "example": "100"
                                    },
                                    "gas_used": {
                                        "type": "string",
                                        "example": "100"
                                    },
                                    "events": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "app"
                                                },
                                                "attributes": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/Event"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "codespace": {
                                        "type": "string",
                                        "example": "ibc"
                                    }
                                }
                            }
                        },
                        "total_gas_used": {
                            "type": "string",
                            "example": "100"
                        },
                        "begin_block_events": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "app"
                                    },
                                    "attributes": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/definitions/Event"
                                        }
                                    }
                                }
                            }
                        },
                        "end_block": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "app"
                                    },
                                    "attributes": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/definitions/Event"
                                        }
                                    }
                                }
                            }
                        },
                        "validator_updates": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "pub_key": {
                                        "required": [
                                            "type",
                                            "value"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "example": "tendermint/PubKeyEd25519"
                                            },
                                            "value": {
                                                "type": "string",
                                                "example": "9tK9IT+FPdf2qm+5c2qaxi10sWP+3erWTKgftn2PaQM="
                                            }
                                        }
                                    },
                                    "power": {
                                        "type": "string",
                                        "example": "300"
                                    }
                                }
                            }
                        },
                        "consensus_params_updates": {
                            "$ref": "#/definitions/ConsensusParams"
                        }
                    }
                }
            }
        },
        "CommitResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "signed_header",
                        "canonical"
                    ],
                    "type": "object",
                    "properties": {
                        "signed_header": {
                            "required": [
                                "header",
                                "commit"
                            ],
                            "type": "object",
                            "properties": {
                                "header": {
                                    "$ref": "#/definitions/BlockHeader"
                                },
                                "commit": {
                                    "required": [
                                        "height",
                                        "round",
                                        "block_id",
                                        "signatures"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "height": {
                                            "type": "string",
                                            "example": "1311801"
                                        },
                                        "round": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "block_id": {
                                            "$ref": "#/definitions/BlockID"
                                        },
                                        "signatures": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "block_id_flag": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "validator_address": {
                                                        "type": "string",
                                                        "example": "000001E443FD237E4B616E2FA69DF4EE3D49A94F"
                                                    },
                                                    "timestamp": {
                                                        "type": "string",
                                                        "example": "2019-04-22T17:01:58.376629719Z"
                                                    },
                                                    "signature": {
                                                        "type": "string",
                                                        "example": "14jaTQXYRt8kbLKEhdHq7AXycrFImiLuZx50uOjs2+Zv+2i7RTG/jnObD07Jo2ubZ8xd7bNBJMqkgtkd0oQHAw=="
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "canonical": {
                            "type": "boolean",
                            "example": true
                        }
                    }
                }
            }
        },
        "ValidatorsResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "block_height",
                        "validators"
                    ],
                    "type": "object",
                    "properties": {
                        "block_height": {
                            "type": "string",
                            "example": "55"
                        },
                        "validators": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ValidatorPriority"
                            }
                        },
                        "count": {
                            "type": "string",
                            "example": "1"
                        },
                        "total": {
                            "type": "string",
                            "example": "25"
                        }
                    }
                }
            }
        },
        "GenesisResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "genesis"
                    ],
                    "type": "object",
                    "properties": {
                        "genesis": {
                            "required": [
                                "genesis_time",
                                "chain_id",
                                "initial_height",
                                "consensus_params",
                                "validators",
                                "app_hash"
                            ],
                            "type": "object",
                            "properties": {
                                "genesis_time": {
                                    "type": "string",
                                    "example": "2019-04-22T17:00:00Z"
                                },
                                "chain_id": {
                                    "type": "string",
                                    "example": "cosmoshub-2"
                                },
                                "initial_height": {
                                    "type": "string",
                                    "example": "2"
                                },
                                "consensus_params": {
                                    "$ref": "#/definitions/ConsensusParams"
                                },
                                "validators": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string",
                                                "example": "B00A6323737F321EB0B8D59C6FD497A14B60938A"
                                            },
                                            "pub_key": {
                                                "required": [
                                                    "type",
                                                    "value"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "tendermint/PubKeyEd25519"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "cOQZvh/h9ZioSeUMZB/1Vy1Xo5x2sjrVjlE/qHnYifM="
                                                    }
                                                }
                                            },
                                            "power": {
                                                "type": "string",
                                                "example": "9328525"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Certus One"
                                            }
                                        }
                                    }
                                },
                                "app_hash": {
                                    "type": "string",
                                    "example": ""
                                },
                                "app_state": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "GenesisChunkedResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "chunk",
                        "total",
                        "data"
                    ],
                    "properties": {
                        "chunk": {
                            "type": "integer",
                            "example": 0
                        },
                        "total": {
                            "type": "integer",
                            "example": 1
                        },
                        "data": {
                            "type": "string",
                            "example": "Z2VuZXNpcwo="
                        }
                    }
                }
            }
        },
        "DumpConsensusResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "round_state",
                        "peers"
                    ],
                    "type": "object",
                    "properties": {
                        "round_state": {
                            "required": [
                                "height",
                                "round",
                                "step",
                                "start_time",
                                "commit_time",
                                "validators",
                                "proposal",
                                "proposal_block",
                                "proposal_block_parts",
                                "locked_round",
                                "locked_block",
                                "locked_block_parts",
                                "valid_round",
                                "valid_block",
                                "valid_block_parts",
                                "votes",
                                "commit_round",
                                "last_commit",
                                "last_validators",
                                "triggered_timeout_precommit"
                            ],
                            "type": "object",
                            "properties": {
                                "height": {
                                    "type": "string",
                                    "example": "1311801"
                                },
                                "round": {
                                    "type": "integer",
                                    "example": 0
                                },
                                "step": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "start_time": {
                                    "type": "string",
                                    "example": "2019-08-05T11:28:49.064658805Z"
                                },
                                "commit_time": {
                                    "type": "string",
                                    "example": "2019-08-05T11:28:44.064658805Z"
                                },
                                "validators": {
                                    "required": [
                                        "validators",
                                        "proposer"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "validators": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/ValidatorPriority"
                                            }
                                        },
                                        "proposer": {
                                            "$ref": "#/definitions/ValidatorPriority"
                                        }
                                    }
                                },
                                "locked_round": {
                                    "type": "integer",
                                    "example": -1
                                },
                                "valid_round": {
                                    "type": "string",
                                    "example": "-1"
                                },
                                "votes": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "round": {
                                                "type": "string",
                                                "example": "0"
                                            },
                                            "prevotes": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "example": [
                                                    "nil-Vote",
                                                    "Vote{19:46A3F8B8393B 1311801/00/1(Prevote) 000000000000 64CE682305CB @ 2019-08-05T11:28:47.374703444Z}"
                                                ]
                                            },
                                            "prevotes_bit_array": {
                                                "type": "string",
                                                "example": "BA{100:___________________x________________________________________________________________________________} 209706/170220253 = 0.00"
                                            },
                                            "precommits": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "example": [
                                                    "nil-Vote"
                                                ]
                                            },
                                            "precommits_bit_array": {
                                                "type": "string",
                                                "example": "BA{100:____________________________________________________________________________________________________} 0/170220253 = 0.00"
                                            }
                                        }
                                    }
                                },
                                "commit_round": {
                                    "type": "integer",
                                    "example": -1
                                },
                                "last_commit": {
                                    "required": [
                                        "votes",
                                        "votes_bit_array",
                                        "peer_maj_23s"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "votes": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "Vote{0:000001E443FD 1311800/00/2(Precommit) 3071ADB27D1A 77EE1B6B6847 @ 2019-08-05T11:28:43.810128139Z}"
                                            ]
                                        },
                                        "votes_bit_array": {
                                            "type": "string",
                                            "example": "BA{100:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} 170220253/170220253 = 1.00"
                                        },
                                        "peer_maj_23s": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "last_validators": {
                                    "required": [
                                        "validators",
                                        "proposer"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "validators": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/ValidatorPriority"
                                            }
                                        },
                                        "proposer": {
                                            "$ref": "#/definitions/ValidatorPriority"
                                        }
                                    }
                                },
                                "triggered_timeout_precommit": {
                                    "type": "boolean",
                                    "example": false
                                }
                            }
                        },
                        "peers": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "node_address": {
                                        "type": "string",
                                        "example": "357f6a6c1d27414579a8185060aa8adf9815c43c@68.183.41.207:26656"
                                    },
                                    "peer_state": {
                                        "required": [
                                            "round_state",
                                            "stats"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "round_state": {
                                                "required": [
                                                    "height",
                                                    "round",
                                                    "step",
                                                    "start_time",
                                                    "proposal",
                                                    "proposal_block_parts_header",
                                                    "proposal_block_parts",
                                                    "proposal_pol_round",
                                                    "proposal_pol",
                                                    "prevotes",
                                                    "precommits",
                                                    "last_commit_round",
                                                    "last_commit",
                                                    "catchup_commit_round",
                                                    "catchup_commit"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "height": {
                                                        "type": "string",
                                                        "example": "1311801"
                                                    },
                                                    "round": {
                                                        "type": "string",
                                                        "example": "0"
                                                    },
                                                    "step": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "start_time": {
                                                        "type": "string",
                                                        "example": "2019-08-05T11:28:49.21730864Z"
                                                    },
                                                    "proposal": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "proposal_block_parts_header": {
                                                        "required": [
                                                            "total",
                                                            "hash"
                                                        ],
                                                        "type": "object",
                                                        "properties": {
                                                            "total": {
                                                                "type": "integer",
                                                                "example": 0
                                                            },
                                                            "hash": {
                                                                "type": "string",
                                                                "example": ""
                                                            }
                                                        }
                                                    },
                                                    "proposal_pol_round": {
                                                        "type": "integer",
                                                        "example": -1
                                                    },
                                                    "proposal_pol": {
                                                        "type": "string",
                                                        "example": "____________________________________________________________________________________________________"
                                                    },
                                                    "prevotes": {
                                                        "type": "string",
                                                        "example": "___________________x________________________________________________________________________________"
                                                    },
                                                    "precommits": {
                                                        "type": "string",
                                                        "example": "____________________________________________________________________________________________________"
                                                    },
                                                    "last_commit_round": {
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "last_commit": {
                                                        "type": "string",
                                                        "example": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                                    },
                                                    "catchup_commit_round": {
                                                        "type": "integer",
                                                        "example": -1
                                                    },
                                                    "catchup_commit": {
                                                        "type": "string",
                                                        "example": "____________________________________________________________________________________________________"
                                                    }
                                                }
                                            },
                                            "stats": {
                                                "required": [
                                                    "votes",
                                                    "block_parts"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "votes": {
                                                        "type": "string",
                                                        "example": "1159558"
                                                    },
                                                    "block_parts": {
                                                        "type": "string",
                                                        "example": "4786"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "ConsensusStateResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "round_state"
                    ],
                    "type": "object",
                    "properties": {
                        "round_state": {
                            "required": [
                                "height/round/step",
                                "start_time",
                                "proposal_block_hash",
                                "locked_block_hash",
                                "valid_block_hash",
                                "height_vote_set",
                                "proposer"
                            ],
                            "type": "object",
                            "properties": {
                                "height/round/step": {
                                    "type": "string",
                                    "example": "1262197/0/8"
                                },
                                "start_time": {
                                    "type": "string",
                                    "example": "2019-08-01T11:52:38.962730289Z"
                                },
                                "proposal_block_hash": {
                                    "type": "string",
                                    "example": "634ADAF1F402663BEC2ABC340ECE8B4B45AA906FA603272ACC5F5EED3097E009"
                                },
                                "locked_block_hash": {
                                    "type": "string",
                                    "example": "634ADAF1F402663BEC2ABC340ECE8B4B45AA906FA603272ACC5F5EED3097E009"
                                },
                                "valid_block_hash": {
                                    "type": "string",
                                    "example": "634ADAF1F402663BEC2ABC340ECE8B4B45AA906FA603272ACC5F5EED3097E009"
                                },
                                "height_vote_set": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "round": {
                                                "type": "integer",
                                                "example": 0
                                            },
                                            "prevotes": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "example": [
                                                    "Vote{0:000001E443FD 1262197/00/1(Prevote) 634ADAF1F402 7BB974E1BA40 @ 2019-08-01T11:52:35.513572509Z}",
                                                    "nil-Vote"
                                                ]
                                            },
                                            "prevotes_bit_array": {
                                                "type": "string",
                                                "example": "BA{100:xxxxxxxxxxxxxxxxx_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} 169753436/170151262 = 1.00"
                                            },
                                            "precommits": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "example": [
                                                    "Vote{5:18C78D135C9D 1262197/00/2(Precommit) 634ADAF1F402 8B5EFFFEABCD @ 2019-08-01T11:52:36.25600005Z}",
                                                    "nil-Vote"
                                                ]
                                            },
                                            "precommits_bit_array": {
                                                "type": "string",
                                                "example": "BA{100:xxxxxx_xxxxx_xxxx_x_xxx_xx_xx_xx__x_x_x__xxxxxxxxxxxxxx_xxxx_xx_xxxxxx_xxxxxxxx_xxxx_xxx_x_xxxx__xxx} 118726247/170151262 = 0.70"
                                            }
                                        }
                                    }
                                },
                                "proposer": {
                                    "type": "object",
                                    "properties": {
                                        "address": {
                                            "type": "string",
                                            "example": "D540AB022088612AC74B287D076DBFBC4A377A2E"
                                        },
                                        "index": {
                                            "type": "integer",
                                            "example": 0
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "ConsensusParamsResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "block_height",
                        "consensus_params"
                    ],
                    "type": "object",
                    "properties": {
                        "block_height": {
                            "type": "string",
                            "example": "1"
                        },
                        "consensus_params": {
                            "$ref": "#/definitions/ConsensusParams"
                        }
                    }
                }
            }
        },
        "NumUnconfirmedTransactionsResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "n_txs",
                        "total",
                        "total_bytes"
                    ],
                    "type": "object",
                    "properties": {
                        "n_txs": {
                            "type": "string",
                            "example": "31"
                        },
                        "total": {
                            "type": "string",
                            "example": "82"
                        },
                        "total_bytes": {
                            "type": "string",
                            "example": "19974"
                        }
                    }
                }
            }
        },
        "UnconfirmedTransactionsResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "n_txs",
                        "total",
                        "total_bytes",
                        "txs"
                    ],
                    "type": "object",
                    "properties": {
                        "n_txs": {
                            "type": "string",
                            "example": "82"
                        },
                        "total": {
                            "type": "string",
                            "example": "82"
                        },
                        "total_bytes": {
                            "type": "string",
                            "example": "19974"
                        },
                        "txs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "gAPwYl3uCjCMTXENChSMnIkb5ZpYHBKIZqecFEV2tuZr7xIUA75/FmYq9WymsOBJ0XSJ8yV8zmQKMIxNcQ0KFIyciRvlmlgcEohmp5wURXa25mvvEhQbrvwbvlNiT+Yjr86G+YQNx7kRVgowjE1xDQoUjJyJG+WaWBwSiGannBRFdrbma+8SFK2m+1oxgILuQLO55n8mWfnbIzyPCjCMTXENChSMnIkb5ZpYHBKIZqecFEV2tuZr7xIUQNGfkmhTNMis4j+dyMDIWXdIPiYKMIxNcQ0KFIyciRvlmlgcEohmp5wURXa25mvvEhS8sL0D0wwgGCItQwVowak5YB38KRIUCg4KBXVhdG9tEgUxMDA1NBDoxRgaagom61rphyECn8x7emhhKdRCB2io7aS/6Cpuq5NbVqbODmqOT3jWw6kSQKUresk+d+Gw0BhjiggTsu8+1voW+VlDCQ1GRYnMaFOHXhyFv7BCLhFWxLxHSAYT8a5XqoMayosZf9mANKdXArA="
                            ]
                        }
                    }
                }
            }
        },
        "TxSearchResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "txs",
                        "total_count"
                    ],
                    "type": "object",
                    "properties": {
                        "txs": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "hash": {
                                        "type": "string",
                                        "example": "D70952032620CC4E2737EB8AC379806359D8E0B17B0488F627997A0B043ABDED"
                                    },
                                    "height": {
                                        "type": "string",
                                        "example": "1000"
                                    },
                                    "index": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "tx_result": {
                                        "required": [
                                            "log",
                                            "gas_wanted",
                                            "gas_used",
                                            "tags"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "log": {
                                                "type": "string",
                                                "example": "[{\"msg_index\":\"0\",\"success\":true,\"log\":\"\"}]"
                                            },
                                            "gas_wanted": {
                                                "type": "string",
                                                "example": "200000"
                                            },
                                            "gas_used": {
                                                "type": "string",
                                                "example": "28596"
                                            },
                                            "tags": {
                                                "$ref": "#/definitions/Event"
                                            }
                                        }
                                    },
                                    "tx": {
                                        "type": "string",
                                        "example": "5wHwYl3uCkaoo2GaChQmSIu8hxpJxLcCuIi8fiHN4TMwrRIU/Af1cEG7Rcs/6LjTl7YjRSymJfYaFAoFdWF0b20SCzE0OTk5OTk1MDAwEhMKDQoFdWF0b20SBDUwMDAQwJoMGmoKJuta6YchAwswBShaB1wkZBctLIhYqBC3JrAI28XGzxP+rVEticGEEkAc+khTkKL9CDE47aDvjEHvUNt+izJfT4KVF2v2JkC+bmlH9K08q3PqHeMI9Z5up+XMusnTqlP985KF+SI5J3ZOIhhNYWRlIGJ5IENpcmNsZSB3aXRoIGxvdmU="
                                    },
                                    "proof": {
                                        "required": [
                                            "RootHash",
                                            "Data",
                                            "Proof"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "RootHash": {
                                                "type": "string",
                                                "example": "72FE6BF6D4109105357AECE0A82E99D0F6288854D16D8767C5E72C57F876A14D"
                                            },
                                            "Data": {
                                                "type": "string",
                                                "example": "5wHwYl3uCkaoo2GaChQmSIu8hxpJxLcCuIi8fiHN4TMwrRIU/Af1cEG7Rcs/6LjTl7YjRSymJfYaFAoFdWF0b20SCzE0OTk5OTk1MDAwEhMKDQoFdWF0b20SBDUwMDAQwJoMGmoKJuta6YchAwswBShaB1wkZBctLIhYqBC3JrAI28XGzxP+rVEticGEEkAc+khTkKL9CDE47aDvjEHvUNt+izJfT4KVF2v2JkC+bmlH9K08q3PqHeMI9Z5up+XMusnTqlP985KF+SI5J3ZOIhhNYWRlIGJ5IENpcmNsZSB3aXRoIGxvdmU="
                                            },
                                            "Proof": {
                                                "required": [
                                                    "total",
                                                    "index",
                                                    "leaf_hash",
                                                    "aunts"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "total": {
                                                        "type": "string",
                                                        "example": "2"
                                                    },
                                                    "index": {
                                                        "type": "string",
                                                        "example": "0"
                                                    },
                                                    "leaf_hash": {
                                                        "type": "string",
                                                        "example": "eoJxKCzF3m72Xiwb/Q43vJ37/2Sx8sfNS9JKJohlsYI="
                                                    },
                                                    "aunts": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "example": [
                                                            "eWb+HG/eMmukrQj4vNGyFYb3nKQncAWacq4HF5eFzDY="
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "total_count": {
                            "type": "string",
                            "example": "2"
                        }
                    }
                }
            }
        },
        "TxResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "hash",
                        "height",
                        "index",
                        "tx_result",
                        "tx"
                    ],
                    "type": "object",
                    "properties": {
                        "hash": {
                            "type": "string",
                            "example": "D70952032620CC4E2737EB8AC379806359D8E0B17B0488F627997A0B043ABDED"
                        },
                        "height": {
                            "type": "string",
                            "example": "1000"
                        },
                        "index": {
                            "type": "integer",
                            "example": 0
                        },
                        "tx_result": {
                            "required": [
                                "log",
                                "gas_wanted",
                                "gas_used",
                                "tags"
                            ],
                            "type": "object",
                            "properties": {
                                "log": {
                                    "type": "string",
                                    "example": "[{\"msg_index\":\"0\",\"success\":true,\"log\":\"\"}]"
                                },
                                "gas_wanted": {
                                    "type": "string",
                                    "example": "200000"
                                },
                                "gas_used": {
                                    "type": "string",
                                    "example": "28596"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Event"
                                    }
                                }
                            }
                        },
                        "tx": {
                            "type": "string",
                            "example": "5wHwYl3uCkaoo2GaChQmSIu8hxpJxLcCuIi8fiHN4TMwrRIU/Af1cEG7Rcs/6LjTl7YjRSymJfYaFAoFdWF0b20SCzE0OTk5OTk1MDAwEhMKDQoFdWF0b20SBDUwMDAQwJoMGmoKJuta6YchAwswBShaB1wkZBctLIhYqBC3JrAI28XGzxP+rVEticGEEkAc+khTkKL9CDE47aDvjEHvUNt+izJfT4KVF2v2JkC+bmlH9K08q3PqHeMI9Z5up+XMusnTqlP985KF+SI5J3ZOIhhNYWRlIGJ5IENpcmNsZSB3aXRoIGxvdmU="
                        }
                    }
                }
            }
        },
        "ABCIInfoResponse": {
            "required": [
                "jsonrpc",
                "id"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "response"
                    ],
                    "type": "object",
                    "properties": {
                        "response": {
                            "required": [
                                "data",
                                "app_version",
                                "version"
                            ],
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "string",
                                    "example": "{\"size\":0}"
                                },
                                "version": {
                                    "type": "string",
                                    "example": "0.16.1"
                                },
                                "app_version": {
                                    "type": "string",
                                    "example": "1314126"
                                }
                            }
                        }
                    }
                }
            }
        },
        "ABCIQueryResponse": {
            "required": [
                "error",
                "result",
                "id",
                "jsonrpc"
            ],
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": ""
                },
                "result": {
                    "required": [
                        "response"
                    ],
                    "type": "object",
                    "properties": {
                        "response": {
                            "required": [
                                "log",
                                "height",
                                "proof",
                                "value",
                                "key",
                                "index",
                                "code"
                            ],
                            "type": "object",
                            "properties": {
                                "log": {
                                    "type": "string",
                                    "example": "exists"
                                },
                                "height": {
                                    "type": "string",
                                    "example": "0"
                                },
                                "proof": {
                                    "type": "string",
                                    "example": "010114FED0DAD959F36091AD761C922ABA3CBF1D8349990101020103011406AA2262E2F448242DF2C2607C3CDC705313EE3B0001149D16177BC71E445476174622EA559715C293740C"
                                },
                                "value": {
                                    "type": "string",
                                    "example": "61626364"
                                },
                                "key": {
                                    "type": "string",
                                    "example": "61626364"
                                },
                                "index": {
                                    "type": "string",
                                    "example": "-1"
                                },
                                "code": {
                                    "type": "string",
                                    "example": "0"
                                }
                            }
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                }
            }
        },
        "BroadcastEvidenceResponse": {
            "required": [
                "id",
                "jsonrpc"
            ],
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": ""
                },
                "result": {
                    "type": "string",
                    "example": ""
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                }
            }
        },
        "BroadcastTxCommitResponse": {
            "required": [
                "error",
                "result",
                "id",
                "jsonrpc"
            ],
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": ""
                },
                "result": {
                    "required": [
                        "height",
                        "hash",
                        "deliver_tx",
                        "check_tx"
                    ],
                    "type": "object",
                    "properties": {
                        "height": {
                            "type": "string",
                            "example": "26682"
                        },
                        "hash": {
                            "type": "string",
                            "example": "75CA0F856A4DA078FC4911580360E70CEFB2EBEE"
                        },
                        "deliver_tx": {
                            "required": [
                                "log",
                                "data",
                                "code"
                            ],
                            "type": "object",
                            "properties": {
                                "log": {
                                    "type": "string",
                                    "example": ""
                                },
                                "data": {
                                    "type": "string",
                                    "example": ""
                                },
                                "code": {
                                    "type": "string",
                                    "example": "0"
                                }
                            }
                        },
                        "check_tx": {
                            "required": [
                                "log",
                                "data",
                                "code"
                            ],
                            "type": "object",
                            "properties": {
                                "log": {
                                    "type": "string",
                                    "example": ""
                                },
                                "data": {
                                    "type": "string",
                                    "example": ""
                                },
                                "code": {
                                    "type": "string",
                                    "example": "0"
                                }
                            }
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                }
            }
        },
        "CheckTxResponse": {
            "required": [
                "error",
                "result",
                "id",
                "jsonrpc"
            ],
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": ""
                },
                "result": {
                    "required": [
                        "log",
                        "data",
                        "code"
                    ],
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string",
                            "example": "0"
                        },
                        "data": {
                            "type": "string",
                            "example": ""
                        },
                        "log": {
                            "type": "string",
                            "example": ""
                        },
                        "info": {
                            "type": "string",
                            "example": ""
                        },
                        "gas_wanted": {
                            "type": "string",
                            "example": "1"
                        },
                        "gas_used": {
                            "type": "string",
                            "example": "0"
                        },
                        "events": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "app"
                                    },
                                    "attributes": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/definitions/Event"
                                        }
                                    }
                                }
                            }
                        },
                        "codespace": {
                            "type": "string",
                            "example": "bank"
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                }
            }
        },
        "BroadcastTxResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result",
                "error"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "code",
                        "data",
                        "log",
                        "hash"
                    ],
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string",
                            "example": "0"
                        },
                        "data": {
                            "type": "string",
                            "example": ""
                        },
                        "log": {
                            "type": "string",
                            "example": ""
                        },
                        "codespace": {
                            "type": "string",
                            "example": "ibc"
                        },
                        "hash": {
                            "type": "string",
                            "example": "0D33F2F03A5234F38706E43004489E061AC40A2E"
                        }
                    }
                },
                "error": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "dialResp": {
            "type": "object",
            "properties": {
                "Log": {
                    "type": "string",
                    "example": "Dialing seeds in progress. See /net_info for details"
                }
            }
        },
        "BlockSearchResponse": {
            "required": [
                "jsonrpc",
                "id",
                "result"
            ],
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "id": {
                    "type": "integer",
                    "example": 0
                },
                "result": {
                    "required": [
                        "blocks",
                        "total_count"
                    ],
                    "type": "object",
                    "properties": {
                        "blocks": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BlockComplete"
                            }
                        },
                        "total_count": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                }
            }
        },
        "ValidatorPriority": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "000001E443FD237E4B616E2FA69DF4EE3D49A94F"
                },
                "pub_key": {
                    "required": [
                        "type",
                        "value"
                    ],
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "example": "tendermint/PubKeyEd25519"
                        },
                        "value": {
                            "type": "string",
                            "example": "9tK9IT+FPdf2qm+5c2qaxi10sWP+3erWTKgftn2PaQM="
                        }
                    }
                },
                "voting_power": {
                    "type": "string",
                    "example": "239727"
                },
                "proposer_priority": {
                    "type": "string",
                    "example": "-11896414"
                }
            }
        },
        "Validator": {
            "type": "object",
            "properties": {
                "pub_key": {
                    "$ref": "#/definitions/PubKey"
                },
                "voting_power": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                }
            }
        },
        "ConsensusParams": {
            "required": [
                "block",
                "evidence",
                "validator"
            ],
            "type": "object",
            "properties": {
                "block": {
                    "required": [
                        "max_bytes",
                        "max_gas",
                        "time_iota_ms"
                    ],
                    "type": "object",
                    "properties": {
                        "max_bytes": {
                            "type": "string",
                            "example": "22020096"
                        },
                        "max_gas": {
                            "type": "string",
                            "example": "1000"
                        },
                        "time_iota_ms": {
                            "type": "string",
                            "example": "1000"
                        }
                    }
                },
                "evidence": {
                    "required": [
                        "max_age"
                    ],
                    "type": "object",
                    "properties": {
                        "max_age": {
                            "type": "string",
                            "example": "100000"
                        }
                    }
                },
                "validator": {
                    "required": [
                        "pub_key_types"
                    ],
                    "type": "object",
                    "properties": {
                        "pub_key_types": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "ed25519"
                            ]
                        }
                    }
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "YWN0aW9u"
                },
                "value": {
                    "type": "string",
                    "example": "c2VuZA=="
                },
                "index": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "BlockHeader": {
            "required": [
                "version",
                "chain_id",
                "height",
                "time",
                "last_block_id",
                "last_commit_hash",
                "data_hash",
                "validators_hash",
                "next_validators_hash",
                "consensus_hash",
                "app_hash",
                "last_results_hash",
                "evidence_hash",
                "proposer_address"
            ],
            "type": "object",
            "properties": {
                "version": {
                    "required": [
                        "block",
                        "app"
                    ],
                    "type": "object",
                    "properties": {
                        "block": {
                            "type": "string",
                            "example": "10"
                        },
                        "app": {
                            "type": "string",
                            "example": "0"
                        }
                    }
                },
                "chain_id": {
                    "type": "string",
                    "example": "cosmoshub-2"
                },
                "height": {
                    "type": "string",
                    "example": "12"
                },
                "time": {
                    "type": "string",
                    "example": "2019-04-22T17:01:51.701356223Z"
                },
                "last_block_id": {
                    "$ref": "#/definitions/BlockID"
                },
                "last_commit_hash": {
                    "type": "string",
                    "example": "21B9BC845AD2CB2C4193CDD17BFC506F1EBE5A7402E84AD96E64171287A34812"
                },
                "data_hash": {
                    "type": "string",
                    "example": "970886F99E77ED0D60DA8FCE0447C2676E59F2F77302B0C4AA10E1D02F18EF73"
                },
                "validators_hash": {
                    "type": "string",
                    "example": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0"
                },
                "next_validators_hash": {
                    "type": "string",
                    "example": "D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0"
                },
                "consensus_hash": {
                    "type": "string",
                    "example": "0F2908883A105C793B74495EB7D6DF2EEA479ED7FC9349206A65CB0F9987A0B8"
                },
                "app_hash": {
                    "type": "string",
                    "example": "223BF64D4A01074DC523A80E76B9BBC786C791FB0A1893AC5B14866356FCFD6C"
                },
                "last_results_hash": {
                    "type": "string",
                    "example": ""
                },
                "evidence_hash": {
                    "type": "string",
                    "example": ""
                },
                "proposer_address": {
                    "type": "string",
                    "example": "D540AB022088612AC74B287D076DBFBC4A377A2E"
                }
            }
        },
        "BlockID": {
            "required": [
                "hash",
                "parts"
            ],
            "properties": {
                "hash": {
                    "type": "string",
                    "example": "112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7"
                },
                "parts": {
                    "required": [
                        "total",
                        "hash"
                    ],
                    "type": "object",
                    "properties": {
                        "total": {
                            "type": "integer",
                            "example": 1
                        },
                        "hash": {
                            "type": "string",
                            "example": "38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD"
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Evidence",
            "description": "Evidence APIs"
        },
        {
            "name": "ABCI",
            "description": "ABCI APIs"
        },
        {
            "name": "Tx",
            "description": "Transactions broadcast APIs"
        },
        {
            "name": "Websocket",
            "description": "Subscribe/unsubscribe are reserved for websocket events."
        },
        {
            "name": "Info",
            "description": "Informations about the node APIs"
        },
        {
            "name": "Unsafe",
            "description": "Unsafe APIs"
        }
    ]
}